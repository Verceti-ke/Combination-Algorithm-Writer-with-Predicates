[[[n,function0],[[v,a],[v,b],[v,c]],:-,[[[n,function1],[[v,a],[v,b],[v,d]]],[[n,=],[[v,c],[v,d]]]]],[[n,function1],[[v,a],[v,b],[v,c]],:-,[[[n,+],[[v,a],[v,b],[v,c]]]]]]

   [1;32mCall: [0m(14) interpret(off, [[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6188)
   [1;34mUnify: [0m(14) interpret(off, [[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6188)
   [1;32mCall: [0m(15) convert_to_grammar_part1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], _6186)
   [1;34mUnify: [0m(15) convert_to_grammar_part1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], _6186)
   [1;32mCall: [0m(16) convert_to_grammar_part11([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], _6186, [], _6190)
   [1;34mUnify: [0m(16) convert_to_grammar_part11([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], _6186, [], _6190)
   [1;32mCall: [0m(17) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[_6168|_6170]
   [1;32mExit: [0m(17) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]
   [1;32mCall: [0m(17) [[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n, function1], [[...|...]|...]], [[n|...], [...|...]]]]=[[n, _6186], _6192, "->", _6210]
   [1;31mFail: [0m(17) [[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n, function1], [[...|...]|...]], [[n|...], [...|...]]]]=[[n, _6186], _6192, "->", _6210]
   [1;33mRedo: [0m(16) convert_to_grammar_part11([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], _6192, [], _6196)
   [1;32mCall: [0m(17) [[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n, function1], [[...|...]|...]], [[n|...], [...|...]]]]=[[n, _6186], "->", _6204]
   [1;31mFail: [0m(17) [[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n, function1], [[...|...]|...]], [[n|...], [...|...]]]]=[[n, _6186], "->", _6204]
   [1;33mRedo: [0m(16) convert_to_grammar_part11([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], _6186, [], _6190)
   [1;34mUnify: [0m(16) convert_to_grammar_part11([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], _6186, [], _6190)
   [1;32mCall: [0m(17) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[_6168|_6170]
   [1;32mExit: [0m(17) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]
   [1;32mCall: [0m(17) [[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n, function1], [[...|...]|...]], [[n|...], [...|...]]]]=[_6174, _6180, ":-", _6198]
   [1;32mExit: [0m(17) [[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n, function1], [[...|...]|...]], [[n|...], [...|...]]]]=[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n, function1], [[...|...]|...]], [[n|...], [...|...]]]]
   [1;32mCall: [0m(17) true
   [1;32mExit: [0m(17) true
   [1;32mCall: [0m(17) true
   [1;32mExit: [0m(17) true
   [1;32mCall: [0m(17) true
   [1;32mExit: [0m(17) true
   [1;32mCall: [0m(17) true
   [1;32mExit: [0m(17) true
   [1;32mCall: [0m(17) lists:append([], [[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]], _6228)
   [1;34mUnify: [0m(17) lists:append([], [[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]], [[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]])
   [1;32mExit: [0m(17) lists:append([], [[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]], [[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]])
   [1;32mCall: [0m(17) convert_to_grammar_part11([[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]]], _6228, [], _6232)
   [1;34mUnify: [0m(17) convert_to_grammar_part11([[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]]], _6228, [], _6232)
   [1;32mCall: [0m(18) [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]=[_6210|_6212]
   [1;32mExit: [0m(18) [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]=[[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]
   [1;32mCall: [0m(18) [[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n, +], [[...|...]|...]]]]=[[n, _6228], _6234, "->", _6252]
   [1;31mFail: [0m(18) [[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n, +], [[...|...]|...]]]]=[[n, _6228], _6234, "->", _6252]
   [1;33mRedo: [0m(17) convert_to_grammar_part11([[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]]], _6234, [], _6238)
   [1;32mCall: [0m(18) [[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n, +], [[...|...]|...]]]]=[[n, _6228], "->", _6246]
   [1;31mFail: [0m(18) [[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n, +], [[...|...]|...]]]]=[[n, _6228], "->", _6246]
   [1;33mRedo: [0m(17) convert_to_grammar_part11([[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]]], _6228, [], _6232)
   [1;34mUnify: [0m(17) convert_to_grammar_part11([[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]]], _6228, [], _6232)
   [1;32mCall: [0m(18) [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]=[_6210|_6212]
   [1;32mExit: [0m(18) [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]=[[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]
   [1;32mCall: [0m(18) [[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n, +], [[...|...]|...]]]]=[_6216, _6222, ":-", _6240]
   [1;32mExit: [0m(18) [[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n, +], [[...|...]|...]]]]=[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n, +], [[...|...]|...]]]]
   [1;32mCall: [0m(18) true
   [1;32mExit: [0m(18) true
   [1;32mCall: [0m(18) true
   [1;32mExit: [0m(18) true
   [1;32mCall: [0m(18) true
   [1;32mExit: [0m(18) true
   [1;32mCall: [0m(18) true
   [1;32mExit: [0m(18) true
   [1;32mCall: [0m(18) lists:append([[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]], [[[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6270)
   [1;34mUnify: [0m(18) lists:append([[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]], [[[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]|_6254])
   [1;32mExit: [0m(18) lists:append([[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]], [[[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]], [[n, function1], [[v, a], [v|...], [...|...]], ":-", [[...|...]]]])
   [1;32mCall: [0m(18) convert_to_grammar_part11([], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6276, [], _6280)
   [1;34mUnify: [0m(18) convert_to_grammar_part11([], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], [])
   [1;32mExit: [0m(18) convert_to_grammar_part11([], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], [])
   [1;32mExit: [0m(17) convert_to_grammar_part11([[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], [])
   [1;32mExit: [0m(16) convert_to_grammar_part11([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], [])
   [1;32mCall: [0m(16) lists:append([[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]], [[n, function1], [[v, a], [v|...], [...|...]], ":-", [[...|...]]]], [], _6276)
   [1;34mUnify: [0m(16) lists:append([[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]], [[n, function1], [[v, a], [v|...], [...|...]], ":-", [[...|...]]]], [], [[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]]|_6260])
   [1;32mExit: [0m(16) lists:append([[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]], [[n, function1], [[v, a], [v|...], [...|...]], ":-", [[...|...]]]], [], [[[n, function0], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...], [...|...]]], [[n, function1], [[v, a], [v|...], [...|...]], ":-", [[...|...]]]])
   [1;32mExit: [0m(15) convert_to_grammar_part1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]])
   [1;32mCall: [0m(15) interpret1(off, [[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6292)
   [1;34mUnify: [0m(15) interpret1(off, [[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6292)
^  [1;32mCall: [0m(16) retractall(debug(_6270))
^  [1;32mExit: [0m(16) retractall(debug(_6270))
^  [1;32mCall: [0m(16) assertz(debug(off))
^  [1;32mExit: [0m(16) assertz(debug(off))
^  [1;32mCall: [0m(16) retractall(cut(_6278))
^  [1;32mExit: [0m(16) retractall(cut(_6278))
^  [1;32mCall: [0m(16) assertz(cut(off))
^  [1;32mExit: [0m(16) assertz(cut(off))
   [1;32mCall: [0m(16) member1([[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6306)
   [1;34mUnify: [0m(16) member1([[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6306)
   [1;32mCall: [0m(17) cut(off)
   [1;34mUnify: [0m(17) cut(off)
   [1;32mExit: [0m(17) cut(off)
   [1;32mCall: [0m(17) [[n, function0], [426, 106, [v, c]]]=[_6286, _6292]
   [1;32mExit: [0m(17) [[n, function0], [426, 106, [v, c]]]=[[n, function0], [426, 106, [v, c]]]
   [1;32mCall: [0m(17) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function0], _6310, ":-", _6328]|_6300]
   [1;32mExit: [0m(17) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]
   [1;32mCall: [0m(17) length([426, 106, [v, c]], _6350)
   [1;34mUnify: [0m(17) length([426, 106, [v, c]], _6350)
   [1;32mExit: [0m(17) length([426, 106, [v, c]], 3)
   [1;32mCall: [0m(17) length([[v, a], [v, b], [v, c]], 3)
   [1;34mUnify: [0m(17) length([[v, a], [v, b], [v, c]], 3)
   [1;34mUnify: [0m(17) length([[v, a], [v, b], [v, c]], 3)
   [1;32mExit: [0m(17) length([[v, a], [v, b], [v, c]], 3)
   [1;32mCall: [0m(17) [n, function0]=[n, grammar]
   [1;31mFail: [0m(17) [n, function0]=[n, grammar]
   [1;33mRedo: [0m(16) member1([[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6354)
   [1;32mCall: [0m(17) [n, function0]=[n, grammar_part]
   [1;31mFail: [0m(17) [n, function0]=[n, grammar_part]
   [1;33mRedo: [0m(16) member1([[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6354)
   [1;32mCall: [0m(17) checkarguments([426, 106, [v, c]], [[v, a], [v, b], [v, c]], [], _6354, [], _6358)
   [1;34mUnify: [0m(17) checkarguments([426, 106, [v, c]], [[v, a], [v, b], [v, c]], [], _6354, [], _6358)
   [1;32mCall: [0m(18) [426, 106, [v, c]]=[_6334|_6336]
   [1;32mExit: [0m(18) [426, 106, [v, c]]=[426, 106, [v, c]]
   [1;32mCall: [0m(18) expressionnotatom(426)
   [1;34mUnify: [0m(18) expressionnotatom(426)
   [1;32mCall: [0m(19) isvalstrempty(426)
   [1;34mUnify: [0m(19) isvalstrempty(426)
   [1;32mCall: [0m(20) var(426)
   [1;31mFail: [0m(20) var(426)
   [1;33mRedo: [0m(19) isvalstrempty(426)
   [1;34mUnify: [0m(19) isvalstrempty(426)
   [1;32mCall: [0m(20) isval(426)
   [1;34mUnify: [0m(20) isval(426)
   [1;32mExit: [0m(20) isval(426)
   [1;32mExit: [0m(19) isvalstrempty(426)
   [1;32mExit: [0m(18) expressionnotatom(426)
   [1;32mCall: [0m(18) [[v, a], [v, b], [v, c]]=[_6340|_6342]
   [1;32mExit: [0m(18) [[v, a], [v, b], [v, c]]=[[v, a], [v, b], [v, c]]
^  [1;32mCall: [0m(18) not(var([v, a]))
^  [1;34mUnify: [0m(18) not(user:var([v, a]))
^  [1;32mExit: [0m(18) not(user:var([v, a]))
   [1;32mCall: [0m(18) isvar([v, a])
   [1;34mUnify: [0m(18) isvar([v, a])
   [1;32mExit: [0m(18) isvar([v, a])
   [1;32mCall: [0m(18) putvalue([v, a], 426, [], _6376)
   [1;34mUnify: [0m(18) putvalue([v, a], 426, [], _6376)
^  [1;32mCall: [0m(19) not(isvar([v, a]))
^  [1;34mUnify: [0m(19) not(user:isvar([v, a]))
   [1;32mCall: [0m(20) isvar([v, a])
   [1;34mUnify: [0m(20) isvar([v, a])
   [1;32mExit: [0m(20) isvar([v, a])
^  [1;31mFail: [0m(19) not(user:isvar([v, a]))
   [1;33mRedo: [0m(18) putvalue([v, a], 426, [], _6376)
   [1;32mCall: [0m(19) isvar([v, a])
   [1;34mUnify: [0m(19) isvar([v, a])
   [1;32mExit: [0m(19) isvar([v, a])
   [1;32mCall: [0m(19) isvalstrorundef(426)
   [1;34mUnify: [0m(19) isvalstrorundef(426)
   [1;32mCall: [0m(20) var(426)
   [1;31mFail: [0m(20) var(426)
   [1;33mRedo: [0m(19) isvalstrorundef(426)
   [1;34mUnify: [0m(19) isvalstrorundef(426)
^  [1;32mCall: [0m(20) not(var(426))
^  [1;34mUnify: [0m(20) not(user:var(426))
^  [1;32mExit: [0m(20) not(user:var(426))
   [1;32mCall: [0m(20) isval(426)
   [1;34mUnify: [0m(20) isval(426)
   [1;32mExit: [0m(20) isval(426)
   [1;32mExit: [0m(19) isvalstrorundef(426)
   [1;32mCall: [0m(19) updatevar([v, a], 426, [], _6386)
   [1;34mUnify: [0m(19) updatevar([v, a], 426, [], _6386)
   [1;32mCall: [0m(20) lists:member([[v, a], empty], [])
   [1;31mFail: [0m(20) lists:member([[v, a], empty], [])
   [1;33mRedo: [0m(19) updatevar([v, a], 426, [], _6386)
^  [1;32mCall: [0m(20) not(member([[v, a], _6378], []))
^  [1;34mUnify: [0m(20) not(user:member([[v, a], _6378], []))
^  [1;32mExit: [0m(20) not(user:member([[v, a], _6378], []))
   [1;32mCall: [0m(20) _6378=empty
   [1;32mExit: [0m(20) empty=empty
   [1;32mCall: [0m(20) true
   [1;32mExit: [0m(20) true
   [1;32mCall: [0m(20) lists:append([], [[[v, a], 426]], _6426)
   [1;34mUnify: [0m(20) lists:append([], [[[v, a], 426]], [[[v, a], 426]])
   [1;32mExit: [0m(20) lists:append([], [[[v, a], 426]], [[[v, a], 426]])
   [1;32mCall: [0m(20) true
   [1;32mExit: [0m(20) true
   [1;32mCall: [0m(20) true
   [1;32mExit: [0m(20) true
   [1;32mExit: [0m(19) updatevar([v, a], 426, [], [[[v, a], 426]])
   [1;32mExit: [0m(18) putvalue([v, a], 426, [], [[[v, a], 426]])
   [1;32mCall: [0m(18) checkarguments([106, [v, c]], [[v, b], [v, c]], [[[v, a], 426]], _6428, [], _6432)
   [1;34mUnify: [0m(18) checkarguments([106, [v, c]], [[v, b], [v, c]], [[[v, a], 426]], _6428, [], _6432)
   [1;32mCall: [0m(19) [106, [v, c]]=[_6408|_6410]
   [1;32mExit: [0m(19) [106, [v, c]]=[106, [v, c]]
   [1;32mCall: [0m(19) expressionnotatom(106)
   [1;34mUnify: [0m(19) expressionnotatom(106)
   [1;32mCall: [0m(20) isvalstrempty(106)
   [1;34mUnify: [0m(20) isvalstrempty(106)
   [1;32mCall: [0m(21) var(106)
   [1;31mFail: [0m(21) var(106)
   [1;33mRedo: [0m(20) isvalstrempty(106)
   [1;34mUnify: [0m(20) isvalstrempty(106)
   [1;32mCall: [0m(21) isval(106)
   [1;34mUnify: [0m(21) isval(106)
   [1;32mExit: [0m(21) isval(106)
   [1;32mExit: [0m(20) isvalstrempty(106)
   [1;32mExit: [0m(19) expressionnotatom(106)
   [1;32mCall: [0m(19) [[v, b], [v, c]]=[_6414|_6416]
   [1;32mExit: [0m(19) [[v, b], [v, c]]=[[v, b], [v, c]]
^  [1;32mCall: [0m(19) not(var([v, b]))
^  [1;34mUnify: [0m(19) not(user:var([v, b]))
^  [1;32mExit: [0m(19) not(user:var([v, b]))
   [1;32mCall: [0m(19) isvar([v, b])
   [1;34mUnify: [0m(19) isvar([v, b])
   [1;32mExit: [0m(19) isvar([v, b])
   [1;32mCall: [0m(19) putvalue([v, b], 106, [[[v, a], 426]], _6450)
   [1;34mUnify: [0m(19) putvalue([v, b], 106, [[[v, a], 426]], _6450)
^  [1;32mCall: [0m(20) not(isvar([v, b]))
^  [1;34mUnify: [0m(20) not(user:isvar([v, b]))
   [1;32mCall: [0m(21) isvar([v, b])
   [1;34mUnify: [0m(21) isvar([v, b])
   [1;32mExit: [0m(21) isvar([v, b])
^  [1;31mFail: [0m(20) not(user:isvar([v, b]))
   [1;33mRedo: [0m(19) putvalue([v, b], 106, [[[v, a], 426]], _6450)
   [1;32mCall: [0m(20) isvar([v, b])
   [1;34mUnify: [0m(20) isvar([v, b])
   [1;32mExit: [0m(20) isvar([v, b])
   [1;32mCall: [0m(20) isvalstrorundef(106)
   [1;34mUnify: [0m(20) isvalstrorundef(106)
   [1;32mCall: [0m(21) var(106)
   [1;31mFail: [0m(21) var(106)
   [1;33mRedo: [0m(20) isvalstrorundef(106)
   [1;34mUnify: [0m(20) isvalstrorundef(106)
^  [1;32mCall: [0m(21) not(var(106))
^  [1;34mUnify: [0m(21) not(user:var(106))
^  [1;32mExit: [0m(21) not(user:var(106))
   [1;32mCall: [0m(21) isval(106)
   [1;34mUnify: [0m(21) isval(106)
   [1;32mExit: [0m(21) isval(106)
   [1;32mExit: [0m(20) isvalstrorundef(106)
   [1;32mCall: [0m(20) updatevar([v, b], 106, [[[v, a], 426]], _6460)
   [1;34mUnify: [0m(20) updatevar([v, b], 106, [[[v, a], 426]], _6460)
   [1;32mCall: [0m(21) lists:member([[v, b], empty], [[[v, a], 426]])
   [1;34mUnify: [0m(21) lists:member([[v, b], empty], [[[v, a], 426]])
   [1;31mFail: [0m(21) lists:member([[v, b], empty], [[[v, a], 426]])
   [1;33mRedo: [0m(20) updatevar([v, b], 106, [[[v, a], 426]], _6460)
^  [1;32mCall: [0m(21) not(member([[v, b], _6452], [[[v, a], 426]]))
^  [1;34mUnify: [0m(21) not(user:member([[v, b], _6452], [[[v, a], 426]]))
^  [1;32mExit: [0m(21) not(user:member([[v, b], _6452], [[[v, a], 426]]))
   [1;32mCall: [0m(21) _6452=empty
   [1;32mExit: [0m(21) empty=empty
   [1;32mCall: [0m(21) true
   [1;32mExit: [0m(21) true
   [1;32mCall: [0m(21) lists:append([[[v, a], 426]], [[[v, b], 106]], _6500)
   [1;34mUnify: [0m(21) lists:append([[[v, a], 426]], [[[v, b], 106]], [[[v, a], 426]|_6484])
   [1;32mExit: [0m(21) lists:append([[[v, a], 426]], [[[v, b], 106]], [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(21) true
   [1;32mExit: [0m(21) true
   [1;32mCall: [0m(21) true
   [1;32mExit: [0m(21) true
   [1;32mExit: [0m(20) updatevar([v, b], 106, [[[v, a], 426]], [[[v, a], 426], [[v, b], 106]])
   [1;32mExit: [0m(19) putvalue([v, b], 106, [[[v, a], 426]], [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(19) checkarguments([[v, c]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _6508, [], _6512)
   [1;34mUnify: [0m(19) checkarguments([[v, c]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _6508, [], _6512)
   [1;32mCall: [0m(20) [[v, c]]=[_6488|_6490]
   [1;32mExit: [0m(20) [[v, c]]=[[v, c]]
   [1;32mCall: [0m(20) expressionnotatom([v, c])
   [1;34mUnify: [0m(20) expressionnotatom([v, c])
   [1;32mCall: [0m(21) isvalstrempty([v, c])
   [1;34mUnify: [0m(21) isvalstrempty([v, c])
   [1;32mCall: [0m(22) var([v, c])
   [1;31mFail: [0m(22) var([v, c])
   [1;33mRedo: [0m(21) isvalstrempty([v, c])
   [1;34mUnify: [0m(21) isvalstrempty([v, c])
   [1;32mCall: [0m(22) isval([v, c])
   [1;34mUnify: [0m(22) isval([v, c])
   [1;31mFail: [0m(22) isval([v, c])
   [1;33mRedo: [0m(21) isvalstrempty([v, c])
   [1;34mUnify: [0m(21) isvalstrempty([v, c])
   [1;31mFail: [0m(21) isvalstrempty([v, c])
   [1;33mRedo: [0m(20) expressionnotatom([v, c])
   [1;34mUnify: [0m(20) expressionnotatom([v, c])
^  [1;32mCall: [0m(21) not(atom([v, c]))
^  [1;34mUnify: [0m(21) not(user:atom([v, c]))
^  [1;32mExit: [0m(21) not(user:atom([v, c]))
   [1;32mCall: [0m(21) length([v, c], _6520)
   [1;34mUnify: [0m(21) length([v, c], _6520)
   [1;32mExit: [0m(21) length([v, c], 2)
   [1;32mCall: [0m(21) 2>=1
   [1;32mExit: [0m(21) 2>=1
   [1;32mCall: [0m(21) expressionnotatom2([v, c])
   [1;34mUnify: [0m(21) expressionnotatom2([v, c])
   [1;32mCall: [0m(22) isvalstrempty(v)
   [1;34mUnify: [0m(22) isvalstrempty(v)
   [1;32mCall: [0m(23) var(v)
   [1;31mFail: [0m(23) var(v)
   [1;33mRedo: [0m(22) isvalstrempty(v)
   [1;34mUnify: [0m(22) isvalstrempty(v)
   [1;32mCall: [0m(23) isval(v)
   [1;34mUnify: [0m(23) isval(v)
   [1;31mFail: [0m(23) isval(v)
   [1;33mRedo: [0m(22) isvalstrempty(v)
   [1;34mUnify: [0m(22) isvalstrempty(v)
   [1;31mFail: [0m(22) isvalstrempty(v)
   [1;31mFail: [0m(21) expressionnotatom2([v, c])
   [1;33mRedo: [0m(20) expressionnotatom([v, c])
   [1;34mUnify: [0m(20) expressionnotatom([v, c])
   [1;32mCall: [0m(21) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(21) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(20) expressionnotatom([v, c])
   [1;33mRedo: [0m(19) checkarguments([[v, c]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _6508, [], _6512)
   [1;34mUnify: [0m(19) checkarguments([[v, c]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _6508, [], _6512)
   [1;32mCall: [0m(20) [[v, c]]=[_6488|_6490]
   [1;32mExit: [0m(20) [[v, c]]=[[v, c]]
^  [1;32mCall: [0m(20) not(var([v, c]))
^  [1;34mUnify: [0m(20) not(user:var([v, c]))
^  [1;32mExit: [0m(20) not(user:var([v, c]))
   [1;32mCall: [0m(20) isvar([v, c])
   [1;34mUnify: [0m(20) isvar([v, c])
   [1;32mExit: [0m(20) isvar([v, c])
   [1;32mCall: [0m(20) [[v, c]]=[_6504|_6506]
   [1;32mExit: [0m(20) [[v, c]]=[[v, c]]
   [1;32mCall: [0m(20) expressionnotatom([v, c])
   [1;34mUnify: [0m(20) expressionnotatom([v, c])
   [1;32mCall: [0m(21) isvalstrempty([v, c])
   [1;34mUnify: [0m(21) isvalstrempty([v, c])
   [1;32mCall: [0m(22) var([v, c])
   [1;31mFail: [0m(22) var([v, c])
   [1;33mRedo: [0m(21) isvalstrempty([v, c])
   [1;34mUnify: [0m(21) isvalstrempty([v, c])
   [1;32mCall: [0m(22) isval([v, c])
   [1;34mUnify: [0m(22) isval([v, c])
   [1;31mFail: [0m(22) isval([v, c])
   [1;33mRedo: [0m(21) isvalstrempty([v, c])
   [1;34mUnify: [0m(21) isvalstrempty([v, c])
   [1;31mFail: [0m(21) isvalstrempty([v, c])
   [1;33mRedo: [0m(20) expressionnotatom([v, c])
   [1;34mUnify: [0m(20) expressionnotatom([v, c])
^  [1;32mCall: [0m(21) not(atom([v, c]))
^  [1;34mUnify: [0m(21) not(user:atom([v, c]))
^  [1;32mExit: [0m(21) not(user:atom([v, c]))
   [1;32mCall: [0m(21) length([v, c], _6536)
   [1;34mUnify: [0m(21) length([v, c], _6536)
   [1;32mExit: [0m(21) length([v, c], 2)
   [1;32mCall: [0m(21) 2>=1
   [1;32mExit: [0m(21) 2>=1
   [1;32mCall: [0m(21) expressionnotatom2([v, c])
   [1;34mUnify: [0m(21) expressionnotatom2([v, c])
   [1;32mCall: [0m(22) isvalstrempty(v)
   [1;34mUnify: [0m(22) isvalstrempty(v)
   [1;32mCall: [0m(23) var(v)
   [1;31mFail: [0m(23) var(v)
   [1;33mRedo: [0m(22) isvalstrempty(v)
   [1;34mUnify: [0m(22) isvalstrempty(v)
   [1;32mCall: [0m(23) isval(v)
   [1;34mUnify: [0m(23) isval(v)
   [1;31mFail: [0m(23) isval(v)
   [1;33mRedo: [0m(22) isvalstrempty(v)
   [1;34mUnify: [0m(22) isvalstrempty(v)
   [1;31mFail: [0m(22) isvalstrempty(v)
   [1;31mFail: [0m(21) expressionnotatom2([v, c])
   [1;33mRedo: [0m(20) expressionnotatom([v, c])
   [1;34mUnify: [0m(20) expressionnotatom([v, c])
   [1;32mCall: [0m(21) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(21) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(20) expressionnotatom([v, c])
   [1;33mRedo: [0m(19) checkarguments([[v, c]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _6508, [], _6512)
   [1;34mUnify: [0m(19) checkarguments([[v, c]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _6508, [], _6512)
   [1;32mCall: [0m(20) [[v, c]]=[_6488|_6490]
   [1;32mExit: [0m(20) [[v, c]]=[[v, c]]
^  [1;32mCall: [0m(20) not(var([v, c]))
^  [1;34mUnify: [0m(20) not(user:var([v, c]))
^  [1;32mExit: [0m(20) not(user:var([v, c]))
   [1;32mCall: [0m(20) isvar([v, c])
   [1;34mUnify: [0m(20) isvar([v, c])
   [1;32mExit: [0m(20) isvar([v, c])
   [1;32mCall: [0m(20) [[v, c]]=[_6504|_6506]
   [1;32mExit: [0m(20) [[v, c]]=[[v, c]]
^  [1;32mCall: [0m(20) not(var([v, c]))
^  [1;34mUnify: [0m(20) not(user:var([v, c]))
^  [1;32mExit: [0m(20) not(user:var([v, c]))
   [1;32mCall: [0m(20) isvar([v, c])
   [1;34mUnify: [0m(20) isvar([v, c])
   [1;32mExit: [0m(20) isvar([v, c])
   [1;32mCall: [0m(20) getvalue([v, c], _6536, [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(20) getvalue([v, c], _6536, [[[v, a], 426], [[v, b], 106]])
^  [1;32mCall: [0m(21) not(isvar([v, c]))
^  [1;34mUnify: [0m(21) not(user:isvar([v, c]))
   [1;32mCall: [0m(22) isvar([v, c])
   [1;34mUnify: [0m(22) isvar([v, c])
   [1;32mExit: [0m(22) isvar([v, c])
^  [1;31mFail: [0m(21) not(user:isvar([v, c]))
   [1;33mRedo: [0m(20) getvalue([v, c], _6536, [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(21) isvar([v, c])
   [1;34mUnify: [0m(21) isvar([v, c])
   [1;32mExit: [0m(21) isvar([v, c])
   [1;32mCall: [0m(21) isvalstrorundef(_6534)
   [1;34mUnify: [0m(21) isvalstrorundef(_6534)
   [1;32mCall: [0m(22) var(_6534)
   [1;32mExit: [0m(22) var(_6534)
   [1;32mExit: [0m(21) isvalstrorundef(_6534)
   [1;32mCall: [0m(21) getvar([v, c], _6536, [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(21) getvar([v, c], _6536, [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(22) lists:member([[v, c], _6526], [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(22) lists:member([[v, c], _6526], [[[v, a], 426], [[v, b], 106]])
   [1;31mFail: [0m(22) lists:member([[v, c], _6526], [[[v, a], 426], [[v, b], 106]])
   [1;33mRedo: [0m(21) getvar([v, c], _6536, [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(21) getvar([v, c], empty, [[[v, a], 426], [[v, b], 106]])
^  [1;32mCall: [0m(22) not(member([[v, c], _6532], [[[v, a], 426], [[v, b], 106]]))
^  [1;34mUnify: [0m(22) not(user:member([[v, c], _6532], [[[v, a], 426], [[v, b], 106]]))
^  [1;32mExit: [0m(22) not(user:member([[v, c], _6532], [[[v, a], 426], [[v, b], 106]]))
   [1;32mCall: [0m(22) true
   [1;32mExit: [0m(22) true
   [1;32mExit: [0m(21) getvar([v, c], empty, [[[v, a], 426], [[v, b], 106]])
   [1;32mExit: [0m(20) getvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(20) true
   [1;32mExit: [0m(20) true
   [1;32mCall: [0m(20) putvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]], _6564)
   [1;34mUnify: [0m(20) putvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]], _6564)
^  [1;32mCall: [0m(21) not(isvar([v, c]))
^  [1;34mUnify: [0m(21) not(user:isvar([v, c]))
   [1;32mCall: [0m(22) isvar([v, c])
   [1;34mUnify: [0m(22) isvar([v, c])
   [1;32mExit: [0m(22) isvar([v, c])
^  [1;31mFail: [0m(21) not(user:isvar([v, c]))
   [1;33mRedo: [0m(20) putvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]], _6564)
   [1;32mCall: [0m(21) isvar([v, c])
   [1;34mUnify: [0m(21) isvar([v, c])
   [1;32mExit: [0m(21) isvar([v, c])
   [1;32mCall: [0m(21) isvalstrorundef(empty)
   [1;34mUnify: [0m(21) isvalstrorundef(empty)
   [1;32mCall: [0m(22) var(empty)
   [1;31mFail: [0m(22) var(empty)
   [1;33mRedo: [0m(21) isvalstrorundef(empty)
   [1;34mUnify: [0m(21) isvalstrorundef(empty)
^  [1;32mCall: [0m(22) not(var(empty))
^  [1;34mUnify: [0m(22) not(user:var(empty))
^  [1;32mExit: [0m(22) not(user:var(empty))
   [1;32mCall: [0m(22) isval(empty)
   [1;34mUnify: [0m(22) isval(empty)
   [1;31mFail: [0m(22) isval(empty)
   [1;33mRedo: [0m(21) isvalstrorundef(empty)
   [1;34mUnify: [0m(21) isvalstrorundef(empty)
^  [1;32mCall: [0m(22) not(var(empty))
^  [1;34mUnify: [0m(22) not(user:var(empty))
^  [1;32mExit: [0m(22) not(user:var(empty))
   [1;32mCall: [0m(22) expression(empty)
   [1;34mUnify: [0m(22) expression(empty)
   [1;32mExit: [0m(22) expression(empty)
   [1;32mExit: [0m(21) isvalstrorundef(empty)
   [1;32mCall: [0m(21) updatevar([v, c], empty, [[[v, a], 426], [[v, b], 106]], _6574)
   [1;34mUnify: [0m(21) updatevar([v, c], empty, [[[v, a], 426], [[v, b], 106]], _6574)
   [1;32mCall: [0m(22) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(22) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106]])
   [1;31mFail: [0m(22) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106]])
   [1;33mRedo: [0m(21) updatevar([v, c], empty, [[[v, a], 426], [[v, b], 106]], _6574)
^  [1;32mCall: [0m(22) not(member([[v, c], _6566], [[[v, a], 426], [[v, b], 106]]))
^  [1;34mUnify: [0m(22) not(user:member([[v, c], _6566], [[[v, a], 426], [[v, b], 106]]))
^  [1;32mExit: [0m(22) not(user:member([[v, c], _6566], [[[v, a], 426], [[v, b], 106]]))
   [1;32mCall: [0m(22) _6566=empty
   [1;32mExit: [0m(22) empty=empty
   [1;32mCall: [0m(22) true
   [1;32mExit: [0m(22) true
   [1;32mCall: [0m(22) lists:append([[[v, a], 426], [[v, b], 106]], [[[v, c], empty]], _6614)
   [1;34mUnify: [0m(22) lists:append([[[v, a], 426], [[v, b], 106]], [[[v, c], empty]], [[[v, a], 426]|_6598])
   [1;32mExit: [0m(22) lists:append([[[v, a], 426], [[v, b], 106]], [[[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(22) true
   [1;32mExit: [0m(22) true
   [1;32mCall: [0m(22) true
   [1;32mExit: [0m(22) true
   [1;32mExit: [0m(21) updatevar([v, c], empty, [[[v, a], 426], [[v, b], 106]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(20) putvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(20) lists:append([], [[[v, c], [v, c]]], _6644)
   [1;34mUnify: [0m(20) lists:append([], [[[v, c], [v, c]]], [[[v, c], [v, c]]])
   [1;32mExit: [0m(20) lists:append([], [[[v, c], [v, c]]], [[[v, c], [v, c]]])
   [1;32mCall: [0m(20) checkarguments([], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6646, [[[v, c], [v, c]]], _6650)
   [1;34mUnify: [0m(20) checkarguments([], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, c], [v, c]]], [[[v, c], [v, c]]])
   [1;32mExit: [0m(20) checkarguments([], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, c], [v, c]]], [[[v, c], [v, c]]])
   [1;32mExit: [0m(19) checkarguments([[v, c]], [[v, c]], [[[v, a], 426], [[v, b], 106]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], [[[v, c], [v, c]]])
   [1;32mExit: [0m(18) checkarguments([106, [v, c]], [[v, b], [v, c]], [[[v, a], 426]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], [[[v, c], [v, c]]])
   [1;32mExit: [0m(17) checkarguments([426, 106, [v, c]], [[v, a], [v, b], [v, c]], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], [[[v, c], [v, c]]])
   [1;32mCall: [0m(17) debug(on)
   [1;31mFail: [0m(17) debug(on)
   [1;33mRedo: [0m(16) member1([[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6646)
   [1;32mCall: [0m(17) true
   [1;32mExit: [0m(17) true
   [1;32mCall: [0m(17) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6646, [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]], true)
   [1;34mUnify: [0m(17) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6646, [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]], true)
   [1;32mCall: [0m(18) [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]=[_6626|_6628]
   [1;32mExit: [0m(18) [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]=[[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]
^  [1;32mCall: [0m(18) not(predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v, d]]]))
^  [1;34mUnify: [0m(18) not(user:predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v|...]]]))
   [1;32mCall: [0m(19) predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v, d]]])
   [1;31mFail: [0m(19) predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v, d]]])
^  [1;32mExit: [0m(18) not(user:predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v|...]]]))
   [1;32mCall: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6662, [[n, function1], [[v, a], [v, b], [v, d]]], _6666)
   [1;34mUnify: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6662, [[n, function1], [[v, a], [v, b], [v, d]]], _6666)
   [1;32mCall: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[_6642|_6644]
   [1;32mExit: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[n, function1], [[v, a], [v, b], [v, d]]]
^  [1;32mCall: [0m(19) not(predicate_or_rule_name([n, function1]))
^  [1;34mUnify: [0m(19) not(user:predicate_or_rule_name([n, function1]))
   [1;32mCall: [0m(20) predicate_or_rule_name([n, function1])
   [1;34mUnify: [0m(20) predicate_or_rule_name([n, function1])
   [1;32mExit: [0m(20) predicate_or_rule_name([n, function1])
^  [1;31mFail: [0m(19) not(user:predicate_or_rule_name([n, function1]))
   [1;33mRedo: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6662, [[n, function1], [[v, a], [v, b], [v, d]]], _6666)
   [1;34mUnify: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6662, [[n, function1], [[v, a], [v, b], [v, d]]], _6666)
   [1;32mCall: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[not, [_6660]]|_6644]
   [1;31mFail: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[not, [_6660]]|_6644]
   [1;33mRedo: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6662, [[n, function1], [[v, a], [v, b], [v, d]]], _6666)
   [1;34mUnify: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6662, [[n, function1], [[v, a], [v, b], [v, d]]], _6666)
   [1;32mCall: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[_6648], or, [_6666]]
   [1;31mFail: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[_6648], or, [_6666]]
   [1;33mRedo: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6662, [[n, function1], [[v, a], [v, b], [v, d]]], _6666)
   [1;34mUnify: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6662, [[n, function1], [[v, a], [v, b], [v, d]]], _6666)
   [1;32mCall: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[_6642|_6644]
   [1;32mExit: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[n, function1], [[v, a], [v, b], [v, d]]]
^  [1;32mCall: [0m(19) not(predicate_or_rule_name([n, function1]))
^  [1;34mUnify: [0m(19) not(user:predicate_or_rule_name([n, function1]))
   [1;32mCall: [0m(20) predicate_or_rule_name([n, function1])
   [1;34mUnify: [0m(20) predicate_or_rule_name([n, function1])
   [1;32mExit: [0m(20) predicate_or_rule_name([n, function1])
^  [1;31mFail: [0m(19) not(user:predicate_or_rule_name([n, function1]))
   [1;31mFail: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6662, [[n, function1], [[v, a], [v, b], [v, d]]], _6666)
   [1;33mRedo: [0m(17) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6646, [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]], true)
   [1;34mUnify: [0m(17) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6646, [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]], true)
   [1;32mCall: [0m(18) [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]=[[not, [_6644]]|_6628]
   [1;31mFail: [0m(18) [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]=[[not, [_6644]]|_6628]
   [1;33mRedo: [0m(17) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6646, [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]], true)
   [1;34mUnify: [0m(17) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6646, [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]], true)
   [1;32mCall: [0m(18) [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]=[[_6632], or, [_6650]]
   [1;31mFail: [0m(18) [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]=[[_6632], or, [_6650]]
   [1;33mRedo: [0m(17) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6646, [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]], true)
   [1;34mUnify: [0m(17) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6646, [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]], true)
   [1;32mCall: [0m(18) [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]=[_6626|_6628]
   [1;32mExit: [0m(18) [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]=[[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]]
^  [1;32mCall: [0m(18) not(predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v, d]]]))
^  [1;34mUnify: [0m(18) not(user:predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v|...]]]))
   [1;32mCall: [0m(19) predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v, d]]])
   [1;31mFail: [0m(19) predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v, d]]])
^  [1;32mExit: [0m(18) not(user:predicate_or_rule_name([[n, function1], [[v, a], [v, b], [v|...]]]))
   [1;32mCall: [0m(18) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, function1], [[v, a], [v, b], [v, d]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6664, _6666, _6668)
   [1;34mUnify: [0m(18) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, function1], [[v, a], [v, b], [v, d]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6664, true, nocut)
   [1;32mCall: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[n, grammar]|_6644]
   [1;31mFail: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[n, grammar]|_6644]
   [1;33mRedo: [0m(18) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, function1], [[v, a], [v, b], [v, d]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6664, _6666, _6668)
   [1;34mUnify: [0m(18) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, function1], [[v, a], [v, b], [v, d]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6664, true, nocut)
   [1;32mCall: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[n, grammar_part]|_6644]
   [1;31mFail: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[n, grammar_part]|_6644]
   [1;33mRedo: [0m(18) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, function1], [[v, a], [v, b], [v, d]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6664, _6666, _6668)
   [1;34mUnify: [0m(18) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, function1], [[v, a], [v, b], [v, d]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _6664, true, nocut)
   [1;32mCall: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[_6642, _6648]
   [1;32mExit: [0m(19) [[n, function1], [[v, a], [v, b], [v, d]]]=[[n, function1], [[v, a], [v, b], [v, d]]]
^  [1;32mCall: [0m(19) not(([n, function1]=[n, grammar]->true;[n, function1]=[n, grammar_part]))
^  [1;34mUnify: [0m(19) not(user:([n, function1]=[n, grammar]->true;[n, function1]=[n, grammar_part]))
   [1;32mCall: [0m(21) [n, function1]=[n, grammar]
   [1;31mFail: [0m(21) [n, function1]=[n, grammar]
   [1;32mCall: [0m(21) [n, function1]=[n, grammar_part]
   [1;31mFail: [0m(21) [n, function1]=[n, grammar_part]
^  [1;32mExit: [0m(19) not(user:([n, function1]=[n, grammar]->true;[n, function1]=[n, grammar_part]))
   [1;32mCall: [0m(19) substitutevarsA1([[v, a], [v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], _6728, [], _6732)
   [1;34mUnify: [0m(19) substitutevarsA1([[v, a], [v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], _6728, [], _6732)
   [1;32mCall: [0m(20) substitutevarsA2([[v, a], [v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], _6728, [], _6732)
   [1;34mUnify: [0m(20) substitutevarsA2([[v, a], [v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], _6728, [], _6732)
   [1;32mCall: [0m(21) [[v, a], [v, b], [v, d]]=[_6708|_6710]
   [1;32mExit: [0m(21) [[v, a], [v, b], [v, d]]=[[v, a], [v, b], [v, d]]
   [1;32mCall: [0m(21) getvalue([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(21) getvalue([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(22) not(isvar([v, a]))
^  [1;34mUnify: [0m(22) not(user:isvar([v, a]))
   [1;32mCall: [0m(23) isvar([v, a])
   [1;34mUnify: [0m(23) isvar([v, a])
   [1;32mExit: [0m(23) isvar([v, a])
^  [1;31mFail: [0m(22) not(user:isvar([v, a]))
   [1;33mRedo: [0m(21) getvalue([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(22) isvar([v, a])
   [1;34mUnify: [0m(22) isvar([v, a])
   [1;32mExit: [0m(22) isvar([v, a])
   [1;32mCall: [0m(22) isvalstrorundef(_6728)
   [1;34mUnify: [0m(22) isvalstrorundef(_6728)
   [1;32mCall: [0m(23) var(_6728)
   [1;32mExit: [0m(23) var(_6728)
   [1;32mExit: [0m(22) isvalstrorundef(_6728)
   [1;32mCall: [0m(22) getvar([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(22) getvar([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(23) lists:member([[v, a], _6720], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(23) lists:member([[v, a], _6720], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(23) lists:member([[v, a], 426], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(23) not(426=empty)
^  [1;34mUnify: [0m(23) not(user:(426=empty))
^  [1;32mExit: [0m(23) not(user:(426=empty))
   [1;32mExit: [0m(22) getvar([v, a], 426, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(21) getvalue([v, a], 426, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(21) 426=empty
   [1;31mFail: [0m(21) 426=empty
   [1;33mRedo: [0m(23) lists:member([[v, a], _6720], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;31mFail: [0m(23) lists:member([[v, a], _6720], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;33mRedo: [0m(22) getvar([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(22) getvar([v, a], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(23) not(member([[v, a], _6726], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
^  [1;34mUnify: [0m(23) not(user:member([[v, a], _6726], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
^  [1;31mFail: [0m(23) not(user:member([[v, a], _6726], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
   [1;33mRedo: [0m(22) getvar([v, a], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(23) lists:member([[v, a], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(23) lists:member([[v, a], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;31mFail: [0m(23) lists:member([[v, a], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;31mFail: [0m(22) getvar([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;31mFail: [0m(21) getvalue([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;33mRedo: [0m(20) substitutevarsA2([[v, a], [v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], _6734, [], _6738)
   [1;32mCall: [0m(21) getvalue([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(21) getvalue([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(22) not(isvar([v, a]))
^  [1;34mUnify: [0m(22) not(user:isvar([v, a]))
   [1;32mCall: [0m(23) isvar([v, a])
   [1;34mUnify: [0m(23) isvar([v, a])
   [1;32mExit: [0m(23) isvar([v, a])
^  [1;31mFail: [0m(22) not(user:isvar([v, a]))
   [1;33mRedo: [0m(21) getvalue([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(22) isvar([v, a])
   [1;34mUnify: [0m(22) isvar([v, a])
   [1;32mExit: [0m(22) isvar([v, a])
   [1;32mCall: [0m(22) isvalstrorundef(_6728)
   [1;34mUnify: [0m(22) isvalstrorundef(_6728)
   [1;32mCall: [0m(23) var(_6728)
   [1;32mExit: [0m(23) var(_6728)
   [1;32mExit: [0m(22) isvalstrorundef(_6728)
   [1;32mCall: [0m(22) getvar([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(22) getvar([v, a], _6730, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(23) lists:member([[v, a], _6720], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(23) lists:member([[v, a], _6720], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(23) lists:member([[v, a], 426], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(23) not(426=empty)
^  [1;34mUnify: [0m(23) not(user:(426=empty))
^  [1;32mExit: [0m(23) not(user:(426=empty))
   [1;32mExit: [0m(22) getvar([v, a], 426, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(21) getvalue([v, a], 426, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(21) lists:append([], [426], _6762)
   [1;34mUnify: [0m(21) lists:append([], [426], [426])
   [1;32mExit: [0m(21) lists:append([], [426], [426])
   [1;32mCall: [0m(21) _6758=[]
   [1;32mExit: [0m(21) []=[]
   [1;32mCall: [0m(21) substitutevarsA2([[v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426], _6764, [], _6768)
   [1;34mUnify: [0m(21) substitutevarsA2([[v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426], _6764, [], _6768)
   [1;32mCall: [0m(22) [[v, b], [v, d]]=[_6744|_6746]
   [1;32mExit: [0m(22) [[v, b], [v, d]]=[[v, b], [v, d]]
   [1;32mCall: [0m(22) getvalue([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(22) getvalue([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(23) not(isvar([v, b]))
^  [1;34mUnify: [0m(23) not(user:isvar([v, b]))
   [1;32mCall: [0m(24) isvar([v, b])
   [1;34mUnify: [0m(24) isvar([v, b])
   [1;32mExit: [0m(24) isvar([v, b])
^  [1;31mFail: [0m(23) not(user:isvar([v, b]))
   [1;33mRedo: [0m(22) getvalue([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(23) isvar([v, b])
   [1;34mUnify: [0m(23) isvar([v, b])
   [1;32mExit: [0m(23) isvar([v, b])
   [1;32mCall: [0m(23) isvalstrorundef(_6764)
   [1;34mUnify: [0m(23) isvalstrorundef(_6764)
   [1;32mCall: [0m(24) var(_6764)
   [1;32mExit: [0m(24) var(_6764)
   [1;32mExit: [0m(23) isvalstrorundef(_6764)
   [1;32mCall: [0m(23) getvar([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(23) getvar([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(24) lists:member([[v, b], _6756], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(24) lists:member([[v, b], _6756], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(24) lists:member([[v, b], 106], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(24) not(106=empty)
^  [1;34mUnify: [0m(24) not(user:(106=empty))
^  [1;32mExit: [0m(24) not(user:(106=empty))
   [1;32mExit: [0m(23) getvar([v, b], 106, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(22) getvalue([v, b], 106, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(22) 106=empty
   [1;31mFail: [0m(22) 106=empty
   [1;33mRedo: [0m(24) lists:member([[v, b], _6756], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;31mFail: [0m(24) lists:member([[v, b], _6756], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;33mRedo: [0m(23) getvar([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(23) getvar([v, b], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(24) not(member([[v, b], _6762], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
^  [1;34mUnify: [0m(24) not(user:member([[v, b], _6762], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
^  [1;31mFail: [0m(24) not(user:member([[v, b], _6762], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
   [1;33mRedo: [0m(23) getvar([v, b], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(24) lists:member([[v, b], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(24) lists:member([[v, b], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;31mFail: [0m(24) lists:member([[v, b], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;31mFail: [0m(23) getvar([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;31mFail: [0m(22) getvalue([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;33mRedo: [0m(21) substitutevarsA2([[v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426], _6770, [], _6774)
   [1;32mCall: [0m(22) getvalue([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(22) getvalue([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(23) not(isvar([v, b]))
^  [1;34mUnify: [0m(23) not(user:isvar([v, b]))
   [1;32mCall: [0m(24) isvar([v, b])
   [1;34mUnify: [0m(24) isvar([v, b])
   [1;32mExit: [0m(24) isvar([v, b])
^  [1;31mFail: [0m(23) not(user:isvar([v, b]))
   [1;33mRedo: [0m(22) getvalue([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(23) isvar([v, b])
   [1;34mUnify: [0m(23) isvar([v, b])
   [1;32mExit: [0m(23) isvar([v, b])
   [1;32mCall: [0m(23) isvalstrorundef(_6764)
   [1;34mUnify: [0m(23) isvalstrorundef(_6764)
   [1;32mCall: [0m(24) var(_6764)
   [1;32mExit: [0m(24) var(_6764)
   [1;32mExit: [0m(23) isvalstrorundef(_6764)
   [1;32mCall: [0m(23) getvar([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(23) getvar([v, b], _6766, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(24) lists:member([[v, b], _6756], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(24) lists:member([[v, b], _6756], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(24) lists:member([[v, b], 106], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(24) not(106=empty)
^  [1;34mUnify: [0m(24) not(user:(106=empty))
^  [1;32mExit: [0m(24) not(user:(106=empty))
   [1;32mExit: [0m(23) getvar([v, b], 106, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(22) getvalue([v, b], 106, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(22) lists:append([426], [106], _6798)
   [1;34mUnify: [0m(22) lists:append([426], [106], [426|_6782])
   [1;32mExit: [0m(22) lists:append([426], [106], [426, 106])
   [1;32mCall: [0m(22) _6800=[]
   [1;32mExit: [0m(22) []=[]
   [1;32mCall: [0m(22) substitutevarsA2([[v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426, 106], _6806, [], _6810)
   [1;34mUnify: [0m(22) substitutevarsA2([[v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426, 106], _6806, [], _6810)
   [1;32mCall: [0m(23) [[v, d]]=[_6786|_6788]
   [1;32mExit: [0m(23) [[v, d]]=[[v, d]]
   [1;32mCall: [0m(23) getvalue([v, d], _6808, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(23) getvalue([v, d], _6808, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(24) not(isvar([v, d]))
^  [1;34mUnify: [0m(24) not(user:isvar([v, d]))
   [1;32mCall: [0m(25) isvar([v, d])
   [1;34mUnify: [0m(25) isvar([v, d])
   [1;32mExit: [0m(25) isvar([v, d])
^  [1;31mFail: [0m(24) not(user:isvar([v, d]))
   [1;33mRedo: [0m(23) getvalue([v, d], _6808, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(24) isvar([v, d])
   [1;34mUnify: [0m(24) isvar([v, d])
   [1;32mExit: [0m(24) isvar([v, d])
   [1;32mCall: [0m(24) isvalstrorundef(_6806)
   [1;34mUnify: [0m(24) isvalstrorundef(_6806)
   [1;32mCall: [0m(25) var(_6806)
   [1;32mExit: [0m(25) var(_6806)
   [1;32mExit: [0m(24) isvalstrorundef(_6806)
   [1;32mCall: [0m(24) getvar([v, d], _6808, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(24) getvar([v, d], _6808, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(25) lists:member([[v, d], _6798], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(25) lists:member([[v, d], _6798], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;31mFail: [0m(25) lists:member([[v, d], _6798], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;33mRedo: [0m(24) getvar([v, d], _6808, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(24) getvar([v, d], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(25) not(member([[v, d], _6804], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
^  [1;34mUnify: [0m(25) not(user:member([[v, d], _6804], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
^  [1;32mExit: [0m(25) not(user:member([[v, d], _6804], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
   [1;32mCall: [0m(25) true
   [1;32mExit: [0m(25) true
   [1;32mExit: [0m(24) getvar([v, d], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(23) getvalue([v, d], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(23) empty=empty
   [1;32mExit: [0m(23) empty=empty
   [1;32mCall: [0m(23) lists:append([426, 106], [[v, d]], _6840)
   [1;34mUnify: [0m(23) lists:append([426, 106], [[v, d]], [426|_6824])
   [1;32mExit: [0m(23) lists:append([426, 106], [[v, d]], [426, 106, [v, d]])
   [1;32mCall: [0m(23) isvar([v, d])
   [1;34mUnify: [0m(23) isvar([v, d])
   [1;32mExit: [0m(23) isvar([v, d])
   [1;32mCall: [0m(23) lists:append([], [[v, d]], _6858)
   [1;34mUnify: [0m(23) lists:append([], [[v, d]], [[v, d]])
   [1;32mExit: [0m(23) lists:append([], [[v, d]], [[v, d]])
   [1;32mCall: [0m(23) substitutevarsA2([], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426, 106, [v, d]], _6860, [[v, d]], _6864)
   [1;34mUnify: [0m(23) substitutevarsA2([], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426, 106, [v, d]], [426, 106, [v, d]], [[v, d]], [[v, d]])
   [1;32mExit: [0m(23) substitutevarsA2([], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426, 106, [v, d]], [426, 106, [v, d]], [[v, d]], [[v, d]])
   [1;32mExit: [0m(22) substitutevarsA2([[v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426, 106], [426, 106, [v, d]], [], [[v, d]])
   [1;32mExit: [0m(21) substitutevarsA2([[v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [426], [426, 106, [v, d]], [], [[v, d]])
   [1;32mExit: [0m(20) substitutevarsA2([[v, a], [v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], [426, 106, [v, d]], [], [[v, d]])
   [1;32mExit: [0m(19) substitutevarsA1([[v, a], [v, b], [v, d]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], [426, 106, [v, d]], [], [[v, d]])
   [1;32mCall: [0m(19) _6866=[[n, function1], [426, 106, [v, d]]]
   [1;32mExit: [0m(19) [[n, function1], [426, 106, [v, d]]]=[[n, function1], [426, 106, [v, d]]]
   [1;32mCall: [0m(19) interpret2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;34mUnify: [0m(19) interpret2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;32mCall: [0m(20) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;34mUnify: [0m(20) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;32mCall: [0m(21) cut(off)
   [1;34mUnify: [0m(21) cut(off)
   [1;32mExit: [0m(21) cut(off)
   [1;32mCall: [0m(21) [[n, function1], [426, 106, [v, d]]]=[_6852, _6858]
   [1;32mExit: [0m(21) [[n, function1], [426, 106, [v, d]]]=[[n, function1], [426, 106, [v, d]]]
   [1;32mCall: [0m(21) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function1], _6876, ":-", _6894]|_6866]
   [1;31mFail: [0m(21) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function1], _6876, ":-", _6894]|_6866]
   [1;33mRedo: [0m(20) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;32mCall: [0m(21) member21([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;34mUnify: [0m(21) member21([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;32mCall: [0m(22) cut(off)
   [1;34mUnify: [0m(22) cut(off)
   [1;32mExit: [0m(22) cut(off)
   [1;32mCall: [0m(22) [[n, function1], [426, 106, [v, d]]]=[_6852]
   [1;31mFail: [0m(22) [[n, function1], [426, 106, [v, d]]]=[_6852]
   [1;33mRedo: [0m(21) member21([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;32mCall: [0m(22) member22([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;34mUnify: [0m(22) member22([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;32mCall: [0m(23) cut(off)
   [1;34mUnify: [0m(23) cut(off)
   [1;32mExit: [0m(23) cut(off)
   [1;32mCall: [0m(23) [[n, function1], [426, 106, [v, d]]]=[_6852, _6858]
   [1;32mExit: [0m(23) [[n, function1], [426, 106, [v, d]]]=[[n, function1], [426, 106, [v, d]]]
   [1;32mCall: [0m(23) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function1], _6876]|_6866]
   [1;31mFail: [0m(23) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function1], _6876]|_6866]
   [1;33mRedo: [0m(22) member22([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;32mCall: [0m(23) member23([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;34mUnify: [0m(23) member23([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;32mCall: [0m(24) cut(off)
   [1;34mUnify: [0m(24) cut(off)
   [1;32mExit: [0m(24) cut(off)
   [1;32mCall: [0m(24) [[n, function1], [426, 106, [v, d]]]=[_6852]
   [1;31mFail: [0m(24) [[n, function1], [426, 106, [v, d]]]=[_6852]
   [1;33mRedo: [0m(23) member23([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], _6872)
   [1;32mCall: [0m(24) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[_6852|_6854]
   [1;32mExit: [0m(24) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]
   [1;32mCall: [0m(24) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], _6878)
   [1;34mUnify: [0m(24) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], _6878)
   [1;32mCall: [0m(25) cut(off)
   [1;34mUnify: [0m(25) cut(off)
   [1;32mExit: [0m(25) cut(off)
   [1;32mCall: [0m(25) [[n, function1], [426, 106, [v, d]]]=[_6858, _6864]
   [1;32mExit: [0m(25) [[n, function1], [426, 106, [v, d]]]=[[n, function1], [426, 106, [v, d]]]
   [1;32mCall: [0m(25) [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]=[[[n, function1], _6882, ":-", _6900]|_6872]
   [1;32mExit: [0m(25) [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]=[[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]
   [1;32mCall: [0m(25) length([426, 106, [v, d]], _6922)
   [1;34mUnify: [0m(25) length([426, 106, [v, d]], _6922)
   [1;32mExit: [0m(25) length([426, 106, [v, d]], 3)
   [1;32mCall: [0m(25) length([[v, a], [v, b], [v, c]], 3)
   [1;34mUnify: [0m(25) length([[v, a], [v, b], [v, c]], 3)
   [1;34mUnify: [0m(25) length([[v, a], [v, b], [v, c]], 3)
   [1;32mExit: [0m(25) length([[v, a], [v, b], [v, c]], 3)
   [1;32mCall: [0m(25) [n, function1]=[n, grammar]
   [1;31mFail: [0m(25) [n, function1]=[n, grammar]
   [1;33mRedo: [0m(24) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], _6926)
   [1;32mCall: [0m(25) [n, function1]=[n, grammar_part]
   [1;31mFail: [0m(25) [n, function1]=[n, grammar_part]
   [1;33mRedo: [0m(24) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], _6926)
   [1;32mCall: [0m(25) checkarguments([426, 106, [v, d]], [[v, a], [v, b], [v, c]], [], _6926, [], _6930)
   [1;34mUnify: [0m(25) checkarguments([426, 106, [v, d]], [[v, a], [v, b], [v, c]], [], _6926, [], _6930)
   [1;32mCall: [0m(26) [426, 106, [v, d]]=[_6906|_6908]
   [1;32mExit: [0m(26) [426, 106, [v, d]]=[426, 106, [v, d]]
   [1;32mCall: [0m(26) expressionnotatom(426)
   [1;34mUnify: [0m(26) expressionnotatom(426)
   [1;32mCall: [0m(27) isvalstrempty(426)
   [1;34mUnify: [0m(27) isvalstrempty(426)
   [1;32mCall: [0m(28) var(426)
   [1;31mFail: [0m(28) var(426)
   [1;33mRedo: [0m(27) isvalstrempty(426)
   [1;34mUnify: [0m(27) isvalstrempty(426)
   [1;32mCall: [0m(28) isval(426)
   [1;34mUnify: [0m(28) isval(426)
   [1;32mExit: [0m(28) isval(426)
   [1;32mExit: [0m(27) isvalstrempty(426)
   [1;32mExit: [0m(26) expressionnotatom(426)
   [1;32mCall: [0m(26) [[v, a], [v, b], [v, c]]=[_6912|_6914]
   [1;32mExit: [0m(26) [[v, a], [v, b], [v, c]]=[[v, a], [v, b], [v, c]]
^  [1;32mCall: [0m(26) not(var([v, a]))
^  [1;34mUnify: [0m(26) not(user:var([v, a]))
^  [1;32mExit: [0m(26) not(user:var([v, a]))
   [1;32mCall: [0m(26) isvar([v, a])
   [1;34mUnify: [0m(26) isvar([v, a])
   [1;32mExit: [0m(26) isvar([v, a])
   [1;32mCall: [0m(26) putvalue([v, a], 426, [], _6948)
   [1;34mUnify: [0m(26) putvalue([v, a], 426, [], _6948)
^  [1;32mCall: [0m(27) not(isvar([v, a]))
^  [1;34mUnify: [0m(27) not(user:isvar([v, a]))
   [1;32mCall: [0m(28) isvar([v, a])
   [1;34mUnify: [0m(28) isvar([v, a])
   [1;32mExit: [0m(28) isvar([v, a])
^  [1;31mFail: [0m(27) not(user:isvar([v, a]))
   [1;33mRedo: [0m(26) putvalue([v, a], 426, [], _6948)
   [1;32mCall: [0m(27) isvar([v, a])
   [1;34mUnify: [0m(27) isvar([v, a])
   [1;32mExit: [0m(27) isvar([v, a])
   [1;32mCall: [0m(27) isvalstrorundef(426)
   [1;34mUnify: [0m(27) isvalstrorundef(426)
   [1;32mCall: [0m(28) var(426)
   [1;31mFail: [0m(28) var(426)
   [1;33mRedo: [0m(27) isvalstrorundef(426)
   [1;34mUnify: [0m(27) isvalstrorundef(426)
^  [1;32mCall: [0m(28) not(var(426))
^  [1;34mUnify: [0m(28) not(user:var(426))
^  [1;32mExit: [0m(28) not(user:var(426))
   [1;32mCall: [0m(28) isval(426)
   [1;34mUnify: [0m(28) isval(426)
   [1;32mExit: [0m(28) isval(426)
   [1;32mExit: [0m(27) isvalstrorundef(426)
   [1;32mCall: [0m(27) updatevar([v, a], 426, [], _6958)
   [1;34mUnify: [0m(27) updatevar([v, a], 426, [], _6958)
   [1;32mCall: [0m(28) lists:member([[v, a], empty], [])
   [1;31mFail: [0m(28) lists:member([[v, a], empty], [])
   [1;33mRedo: [0m(27) updatevar([v, a], 426, [], _6958)
^  [1;32mCall: [0m(28) not(member([[v, a], _6950], []))
^  [1;34mUnify: [0m(28) not(user:member([[v, a], _6950], []))
^  [1;32mExit: [0m(28) not(user:member([[v, a], _6950], []))
   [1;32mCall: [0m(28) _6950=empty
   [1;32mExit: [0m(28) empty=empty
   [1;32mCall: [0m(28) true
   [1;32mExit: [0m(28) true
   [1;32mCall: [0m(28) lists:append([], [[[v, a], 426]], _6998)
   [1;34mUnify: [0m(28) lists:append([], [[[v, a], 426]], [[[v, a], 426]])
   [1;32mExit: [0m(28) lists:append([], [[[v, a], 426]], [[[v, a], 426]])
   [1;32mCall: [0m(28) true
   [1;32mExit: [0m(28) true
   [1;32mCall: [0m(28) true
   [1;32mExit: [0m(28) true
   [1;32mExit: [0m(27) updatevar([v, a], 426, [], [[[v, a], 426]])
   [1;32mExit: [0m(26) putvalue([v, a], 426, [], [[[v, a], 426]])
   [1;32mCall: [0m(26) checkarguments([106, [v, d]], [[v, b], [v, c]], [[[v, a], 426]], _7000, [], _7004)
   [1;34mUnify: [0m(26) checkarguments([106, [v, d]], [[v, b], [v, c]], [[[v, a], 426]], _7000, [], _7004)
   [1;32mCall: [0m(27) [106, [v, d]]=[_6980|_6982]
   [1;32mExit: [0m(27) [106, [v, d]]=[106, [v, d]]
   [1;32mCall: [0m(27) expressionnotatom(106)
   [1;34mUnify: [0m(27) expressionnotatom(106)
   [1;32mCall: [0m(28) isvalstrempty(106)
   [1;34mUnify: [0m(28) isvalstrempty(106)
   [1;32mCall: [0m(29) var(106)
   [1;31mFail: [0m(29) var(106)
   [1;33mRedo: [0m(28) isvalstrempty(106)
   [1;34mUnify: [0m(28) isvalstrempty(106)
   [1;32mCall: [0m(29) isval(106)
   [1;34mUnify: [0m(29) isval(106)
   [1;32mExit: [0m(29) isval(106)
   [1;32mExit: [0m(28) isvalstrempty(106)
   [1;32mExit: [0m(27) expressionnotatom(106)
   [1;32mCall: [0m(27) [[v, b], [v, c]]=[_6986|_6988]
   [1;32mExit: [0m(27) [[v, b], [v, c]]=[[v, b], [v, c]]
^  [1;32mCall: [0m(27) not(var([v, b]))
^  [1;34mUnify: [0m(27) not(user:var([v, b]))
^  [1;32mExit: [0m(27) not(user:var([v, b]))
   [1;32mCall: [0m(27) isvar([v, b])
   [1;34mUnify: [0m(27) isvar([v, b])
   [1;32mExit: [0m(27) isvar([v, b])
   [1;32mCall: [0m(27) putvalue([v, b], 106, [[[v, a], 426]], _7022)
   [1;34mUnify: [0m(27) putvalue([v, b], 106, [[[v, a], 426]], _7022)
^  [1;32mCall: [0m(28) not(isvar([v, b]))
^  [1;34mUnify: [0m(28) not(user:isvar([v, b]))
   [1;32mCall: [0m(29) isvar([v, b])
   [1;34mUnify: [0m(29) isvar([v, b])
   [1;32mExit: [0m(29) isvar([v, b])
^  [1;31mFail: [0m(28) not(user:isvar([v, b]))
   [1;33mRedo: [0m(27) putvalue([v, b], 106, [[[v, a], 426]], _7022)
   [1;32mCall: [0m(28) isvar([v, b])
   [1;34mUnify: [0m(28) isvar([v, b])
   [1;32mExit: [0m(28) isvar([v, b])
   [1;32mCall: [0m(28) isvalstrorundef(106)
   [1;34mUnify: [0m(28) isvalstrorundef(106)
   [1;32mCall: [0m(29) var(106)
   [1;31mFail: [0m(29) var(106)
   [1;33mRedo: [0m(28) isvalstrorundef(106)
   [1;34mUnify: [0m(28) isvalstrorundef(106)
^  [1;32mCall: [0m(29) not(var(106))
^  [1;34mUnify: [0m(29) not(user:var(106))
^  [1;32mExit: [0m(29) not(user:var(106))
   [1;32mCall: [0m(29) isval(106)
   [1;34mUnify: [0m(29) isval(106)
   [1;32mExit: [0m(29) isval(106)
   [1;32mExit: [0m(28) isvalstrorundef(106)
   [1;32mCall: [0m(28) updatevar([v, b], 106, [[[v, a], 426]], _7032)
   [1;34mUnify: [0m(28) updatevar([v, b], 106, [[[v, a], 426]], _7032)
   [1;32mCall: [0m(29) lists:member([[v, b], empty], [[[v, a], 426]])
   [1;34mUnify: [0m(29) lists:member([[v, b], empty], [[[v, a], 426]])
   [1;31mFail: [0m(29) lists:member([[v, b], empty], [[[v, a], 426]])
   [1;33mRedo: [0m(28) updatevar([v, b], 106, [[[v, a], 426]], _7032)
^  [1;32mCall: [0m(29) not(member([[v, b], _7024], [[[v, a], 426]]))
^  [1;34mUnify: [0m(29) not(user:member([[v, b], _7024], [[[v, a], 426]]))
^  [1;32mExit: [0m(29) not(user:member([[v, b], _7024], [[[v, a], 426]]))
   [1;32mCall: [0m(29) _7024=empty
   [1;32mExit: [0m(29) empty=empty
   [1;32mCall: [0m(29) true
   [1;32mExit: [0m(29) true
   [1;32mCall: [0m(29) lists:append([[[v, a], 426]], [[[v, b], 106]], _7072)
   [1;34mUnify: [0m(29) lists:append([[[v, a], 426]], [[[v, b], 106]], [[[v, a], 426]|_7056])
   [1;32mExit: [0m(29) lists:append([[[v, a], 426]], [[[v, b], 106]], [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(29) true
   [1;32mExit: [0m(29) true
   [1;32mCall: [0m(29) true
   [1;32mExit: [0m(29) true
   [1;32mExit: [0m(28) updatevar([v, b], 106, [[[v, a], 426]], [[[v, a], 426], [[v, b], 106]])
   [1;32mExit: [0m(27) putvalue([v, b], 106, [[[v, a], 426]], [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(27) checkarguments([[v, d]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _7080, [], _7084)
   [1;34mUnify: [0m(27) checkarguments([[v, d]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _7080, [], _7084)
   [1;32mCall: [0m(28) [[v, d]]=[_7060|_7062]
   [1;32mExit: [0m(28) [[v, d]]=[[v, d]]
   [1;32mCall: [0m(28) expressionnotatom([v, d])
   [1;34mUnify: [0m(28) expressionnotatom([v, d])
   [1;32mCall: [0m(29) isvalstrempty([v, d])
   [1;34mUnify: [0m(29) isvalstrempty([v, d])
   [1;32mCall: [0m(30) var([v, d])
   [1;31mFail: [0m(30) var([v, d])
   [1;33mRedo: [0m(29) isvalstrempty([v, d])
   [1;34mUnify: [0m(29) isvalstrempty([v, d])
   [1;32mCall: [0m(30) isval([v, d])
   [1;34mUnify: [0m(30) isval([v, d])
   [1;31mFail: [0m(30) isval([v, d])
   [1;33mRedo: [0m(29) isvalstrempty([v, d])
   [1;34mUnify: [0m(29) isvalstrempty([v, d])
   [1;31mFail: [0m(29) isvalstrempty([v, d])
   [1;33mRedo: [0m(28) expressionnotatom([v, d])
   [1;34mUnify: [0m(28) expressionnotatom([v, d])
^  [1;32mCall: [0m(29) not(atom([v, d]))
^  [1;34mUnify: [0m(29) not(user:atom([v, d]))
^  [1;32mExit: [0m(29) not(user:atom([v, d]))
   [1;32mCall: [0m(29) length([v, d], _7092)
   [1;34mUnify: [0m(29) length([v, d], _7092)
   [1;32mExit: [0m(29) length([v, d], 2)
   [1;32mCall: [0m(29) 2>=1
   [1;32mExit: [0m(29) 2>=1
   [1;32mCall: [0m(29) expressionnotatom2([v, d])
   [1;34mUnify: [0m(29) expressionnotatom2([v, d])
   [1;32mCall: [0m(30) isvalstrempty(v)
   [1;34mUnify: [0m(30) isvalstrempty(v)
   [1;32mCall: [0m(31) var(v)
   [1;31mFail: [0m(31) var(v)
   [1;33mRedo: [0m(30) isvalstrempty(v)
   [1;34mUnify: [0m(30) isvalstrempty(v)
   [1;32mCall: [0m(31) isval(v)
   [1;34mUnify: [0m(31) isval(v)
   [1;31mFail: [0m(31) isval(v)
   [1;33mRedo: [0m(30) isvalstrempty(v)
   [1;34mUnify: [0m(30) isvalstrempty(v)
   [1;31mFail: [0m(30) isvalstrempty(v)
   [1;31mFail: [0m(29) expressionnotatom2([v, d])
   [1;33mRedo: [0m(28) expressionnotatom([v, d])
   [1;34mUnify: [0m(28) expressionnotatom([v, d])
   [1;32mCall: [0m(29) predicate_or_rule_name([v, d])
   [1;31mFail: [0m(29) predicate_or_rule_name([v, d])
   [1;31mFail: [0m(28) expressionnotatom([v, d])
   [1;33mRedo: [0m(27) checkarguments([[v, d]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _7080, [], _7084)
   [1;34mUnify: [0m(27) checkarguments([[v, d]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _7080, [], _7084)
   [1;32mCall: [0m(28) [[v, d]]=[_7060|_7062]
   [1;32mExit: [0m(28) [[v, d]]=[[v, d]]
^  [1;32mCall: [0m(28) not(var([v, d]))
^  [1;34mUnify: [0m(28) not(user:var([v, d]))
^  [1;32mExit: [0m(28) not(user:var([v, d]))
   [1;32mCall: [0m(28) isvar([v, d])
   [1;34mUnify: [0m(28) isvar([v, d])
   [1;32mExit: [0m(28) isvar([v, d])
   [1;32mCall: [0m(28) [[v, c]]=[_7076|_7078]
   [1;32mExit: [0m(28) [[v, c]]=[[v, c]]
   [1;32mCall: [0m(28) expressionnotatom([v, c])
   [1;34mUnify: [0m(28) expressionnotatom([v, c])
   [1;32mCall: [0m(29) isvalstrempty([v, c])
   [1;34mUnify: [0m(29) isvalstrempty([v, c])
   [1;32mCall: [0m(30) var([v, c])
   [1;31mFail: [0m(30) var([v, c])
   [1;33mRedo: [0m(29) isvalstrempty([v, c])
   [1;34mUnify: [0m(29) isvalstrempty([v, c])
   [1;32mCall: [0m(30) isval([v, c])
   [1;34mUnify: [0m(30) isval([v, c])
   [1;31mFail: [0m(30) isval([v, c])
   [1;33mRedo: [0m(29) isvalstrempty([v, c])
   [1;34mUnify: [0m(29) isvalstrempty([v, c])
   [1;31mFail: [0m(29) isvalstrempty([v, c])
   [1;33mRedo: [0m(28) expressionnotatom([v, c])
   [1;34mUnify: [0m(28) expressionnotatom([v, c])
^  [1;32mCall: [0m(29) not(atom([v, c]))
^  [1;34mUnify: [0m(29) not(user:atom([v, c]))
^  [1;32mExit: [0m(29) not(user:atom([v, c]))
   [1;32mCall: [0m(29) length([v, c], _7108)
   [1;34mUnify: [0m(29) length([v, c], _7108)
   [1;32mExit: [0m(29) length([v, c], 2)
   [1;32mCall: [0m(29) 2>=1
   [1;32mExit: [0m(29) 2>=1
   [1;32mCall: [0m(29) expressionnotatom2([v, c])
   [1;34mUnify: [0m(29) expressionnotatom2([v, c])
   [1;32mCall: [0m(30) isvalstrempty(v)
   [1;34mUnify: [0m(30) isvalstrempty(v)
   [1;32mCall: [0m(31) var(v)
   [1;31mFail: [0m(31) var(v)
   [1;33mRedo: [0m(30) isvalstrempty(v)
   [1;34mUnify: [0m(30) isvalstrempty(v)
   [1;32mCall: [0m(31) isval(v)
   [1;34mUnify: [0m(31) isval(v)
   [1;31mFail: [0m(31) isval(v)
   [1;33mRedo: [0m(30) isvalstrempty(v)
   [1;34mUnify: [0m(30) isvalstrempty(v)
   [1;31mFail: [0m(30) isvalstrempty(v)
   [1;31mFail: [0m(29) expressionnotatom2([v, c])
   [1;33mRedo: [0m(28) expressionnotatom([v, c])
   [1;34mUnify: [0m(28) expressionnotatom([v, c])
   [1;32mCall: [0m(29) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(29) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(28) expressionnotatom([v, c])
   [1;33mRedo: [0m(27) checkarguments([[v, d]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _7080, [], _7084)
   [1;34mUnify: [0m(27) checkarguments([[v, d]], [[v, c]], [[[v, a], 426], [[v, b], 106]], _7080, [], _7084)
   [1;32mCall: [0m(28) [[v, d]]=[_7060|_7062]
   [1;32mExit: [0m(28) [[v, d]]=[[v, d]]
^  [1;32mCall: [0m(28) not(var([v, d]))
^  [1;34mUnify: [0m(28) not(user:var([v, d]))
^  [1;32mExit: [0m(28) not(user:var([v, d]))
   [1;32mCall: [0m(28) isvar([v, d])
   [1;34mUnify: [0m(28) isvar([v, d])
   [1;32mExit: [0m(28) isvar([v, d])
   [1;32mCall: [0m(28) [[v, c]]=[_7076|_7078]
   [1;32mExit: [0m(28) [[v, c]]=[[v, c]]
^  [1;32mCall: [0m(28) not(var([v, c]))
^  [1;34mUnify: [0m(28) not(user:var([v, c]))
^  [1;32mExit: [0m(28) not(user:var([v, c]))
   [1;32mCall: [0m(28) isvar([v, c])
   [1;34mUnify: [0m(28) isvar([v, c])
   [1;32mExit: [0m(28) isvar([v, c])
   [1;32mCall: [0m(28) getvalue([v, c], _7108, [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(28) getvalue([v, c], _7108, [[[v, a], 426], [[v, b], 106]])
^  [1;32mCall: [0m(29) not(isvar([v, c]))
^  [1;34mUnify: [0m(29) not(user:isvar([v, c]))
   [1;32mCall: [0m(30) isvar([v, c])
   [1;34mUnify: [0m(30) isvar([v, c])
   [1;32mExit: [0m(30) isvar([v, c])
^  [1;31mFail: [0m(29) not(user:isvar([v, c]))
   [1;33mRedo: [0m(28) getvalue([v, c], _7108, [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(29) isvar([v, c])
   [1;34mUnify: [0m(29) isvar([v, c])
   [1;32mExit: [0m(29) isvar([v, c])
   [1;32mCall: [0m(29) isvalstrorundef(_7106)
   [1;34mUnify: [0m(29) isvalstrorundef(_7106)
   [1;32mCall: [0m(30) var(_7106)
   [1;32mExit: [0m(30) var(_7106)
   [1;32mExit: [0m(29) isvalstrorundef(_7106)
   [1;32mCall: [0m(29) getvar([v, c], _7108, [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(29) getvar([v, c], _7108, [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(30) lists:member([[v, c], _7098], [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(30) lists:member([[v, c], _7098], [[[v, a], 426], [[v, b], 106]])
   [1;31mFail: [0m(30) lists:member([[v, c], _7098], [[[v, a], 426], [[v, b], 106]])
   [1;33mRedo: [0m(29) getvar([v, c], _7108, [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(29) getvar([v, c], empty, [[[v, a], 426], [[v, b], 106]])
^  [1;32mCall: [0m(30) not(member([[v, c], _7104], [[[v, a], 426], [[v, b], 106]]))
^  [1;34mUnify: [0m(30) not(user:member([[v, c], _7104], [[[v, a], 426], [[v, b], 106]]))
^  [1;32mExit: [0m(30) not(user:member([[v, c], _7104], [[[v, a], 426], [[v, b], 106]]))
   [1;32mCall: [0m(30) true
   [1;32mExit: [0m(30) true
   [1;32mExit: [0m(29) getvar([v, c], empty, [[[v, a], 426], [[v, b], 106]])
   [1;32mExit: [0m(28) getvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(28) true
   [1;32mExit: [0m(28) true
   [1;32mCall: [0m(28) putvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]], _7136)
   [1;34mUnify: [0m(28) putvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]], _7136)
^  [1;32mCall: [0m(29) not(isvar([v, c]))
^  [1;34mUnify: [0m(29) not(user:isvar([v, c]))
   [1;32mCall: [0m(30) isvar([v, c])
   [1;34mUnify: [0m(30) isvar([v, c])
   [1;32mExit: [0m(30) isvar([v, c])
^  [1;31mFail: [0m(29) not(user:isvar([v, c]))
   [1;33mRedo: [0m(28) putvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]], _7136)
   [1;32mCall: [0m(29) isvar([v, c])
   [1;34mUnify: [0m(29) isvar([v, c])
   [1;32mExit: [0m(29) isvar([v, c])
   [1;32mCall: [0m(29) isvalstrorundef(empty)
   [1;34mUnify: [0m(29) isvalstrorundef(empty)
   [1;32mCall: [0m(30) var(empty)
   [1;31mFail: [0m(30) var(empty)
   [1;33mRedo: [0m(29) isvalstrorundef(empty)
   [1;34mUnify: [0m(29) isvalstrorundef(empty)
^  [1;32mCall: [0m(30) not(var(empty))
^  [1;34mUnify: [0m(30) not(user:var(empty))
^  [1;32mExit: [0m(30) not(user:var(empty))
   [1;32mCall: [0m(30) isval(empty)
   [1;34mUnify: [0m(30) isval(empty)
   [1;31mFail: [0m(30) isval(empty)
   [1;33mRedo: [0m(29) isvalstrorundef(empty)
   [1;34mUnify: [0m(29) isvalstrorundef(empty)
^  [1;32mCall: [0m(30) not(var(empty))
^  [1;34mUnify: [0m(30) not(user:var(empty))
^  [1;32mExit: [0m(30) not(user:var(empty))
   [1;32mCall: [0m(30) expression(empty)
   [1;34mUnify: [0m(30) expression(empty)
   [1;32mExit: [0m(30) expression(empty)
   [1;32mExit: [0m(29) isvalstrorundef(empty)
   [1;32mCall: [0m(29) updatevar([v, c], empty, [[[v, a], 426], [[v, b], 106]], _7146)
   [1;34mUnify: [0m(29) updatevar([v, c], empty, [[[v, a], 426], [[v, b], 106]], _7146)
   [1;32mCall: [0m(30) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106]])
   [1;34mUnify: [0m(30) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106]])
   [1;31mFail: [0m(30) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106]])
   [1;33mRedo: [0m(29) updatevar([v, c], empty, [[[v, a], 426], [[v, b], 106]], _7146)
^  [1;32mCall: [0m(30) not(member([[v, c], _7138], [[[v, a], 426], [[v, b], 106]]))
^  [1;34mUnify: [0m(30) not(user:member([[v, c], _7138], [[[v, a], 426], [[v, b], 106]]))
^  [1;32mExit: [0m(30) not(user:member([[v, c], _7138], [[[v, a], 426], [[v, b], 106]]))
   [1;32mCall: [0m(30) _7138=empty
   [1;32mExit: [0m(30) empty=empty
   [1;32mCall: [0m(30) true
   [1;32mExit: [0m(30) true
   [1;32mCall: [0m(30) lists:append([[[v, a], 426], [[v, b], 106]], [[[v, c], empty]], _7186)
   [1;34mUnify: [0m(30) lists:append([[[v, a], 426], [[v, b], 106]], [[[v, c], empty]], [[[v, a], 426]|_7170])
   [1;32mExit: [0m(30) lists:append([[[v, a], 426], [[v, b], 106]], [[[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(30) true
   [1;32mExit: [0m(30) true
   [1;32mCall: [0m(30) true
   [1;32mExit: [0m(30) true
   [1;32mExit: [0m(29) updatevar([v, c], empty, [[[v, a], 426], [[v, b], 106]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(28) putvalue([v, c], empty, [[[v, a], 426], [[v, b], 106]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(28) lists:append([], [[[v, d], [v, c]]], _7216)
   [1;34mUnify: [0m(28) lists:append([], [[[v, d], [v, c]]], [[[v, d], [v, c]]])
   [1;32mExit: [0m(28) lists:append([], [[[v, d], [v, c]]], [[[v, d], [v, c]]])
   [1;32mCall: [0m(28) checkarguments([], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7218, [[[v, d], [v, c]]], _7222)
   [1;34mUnify: [0m(28) checkarguments([], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], [v, c]]], [[[v, d], [v, c]]])
   [1;32mExit: [0m(28) checkarguments([], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], [v, c]]], [[[v, d], [v, c]]])
   [1;32mExit: [0m(27) checkarguments([[v, d]], [[v, c]], [[[v, a], 426], [[v, b], 106]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], [[[v, d], [v, c]]])
   [1;32mExit: [0m(26) checkarguments([106, [v, d]], [[v, b], [v, c]], [[[v, a], 426]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], [[[v, d], [v, c]]])
   [1;32mExit: [0m(25) checkarguments([426, 106, [v, d]], [[v, a], [v, b], [v, c]], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [], [[[v, d], [v, c]]])
   [1;32mCall: [0m(25) debug(on)
   [1;31mFail: [0m(25) debug(on)
   [1;33mRedo: [0m(24) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], _7218)
   [1;32mCall: [0m(25) true
   [1;32mExit: [0m(25) true
   [1;32mCall: [0m(25) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7218, [[[n, +], [[v, a], [v, b], [v, c]]]], true)
   [1;34mUnify: [0m(25) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7218, [[[n, +], [[v, a], [v, b], [v, c]]]], true)
   [1;32mCall: [0m(26) [[[n, +], [[v, a], [v, b], [v, c]]]]=[_7198|_7200]
   [1;32mExit: [0m(26) [[[n, +], [[v, a], [v, b], [v, c]]]]=[[[n, +], [[v, a], [v, b], [v, c]]]]
^  [1;32mCall: [0m(26) not(predicate_or_rule_name([[n, +], [[v, a], [v, b], [v, c]]]))
^  [1;34mUnify: [0m(26) not(user:predicate_or_rule_name([[n, +], [[v, a], [v, b], [v|...]]]))
   [1;32mCall: [0m(27) predicate_or_rule_name([[n, +], [[v, a], [v, b], [v, c]]])
   [1;31mFail: [0m(27) predicate_or_rule_name([[n, +], [[v, a], [v, b], [v, c]]])
^  [1;32mExit: [0m(26) not(user:predicate_or_rule_name([[n, +], [[v, a], [v, b], [v|...]]]))
   [1;32mCall: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7234, [[n, +], [[v, a], [v, b], [v, c]]], _7238)
   [1;34mUnify: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7234, [[n, +], [[v, a], [v, b], [v, c]]], _7238)
   [1;32mCall: [0m(27) [[n, +], [[v, a], [v, b], [v, c]]]=[_7214|_7216]
   [1;32mExit: [0m(27) [[n, +], [[v, a], [v, b], [v, c]]]=[[n, +], [[v, a], [v, b], [v, c]]]
^  [1;32mCall: [0m(27) not(predicate_or_rule_name([n, +]))
^  [1;34mUnify: [0m(27) not(user:predicate_or_rule_name([n, +]))
   [1;32mCall: [0m(28) predicate_or_rule_name([n, +])
   [1;34mUnify: [0m(28) predicate_or_rule_name([n, +])
   [1;32mExit: [0m(28) predicate_or_rule_name([n, +])
^  [1;31mFail: [0m(27) not(user:predicate_or_rule_name([n, +]))
   [1;33mRedo: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7234, [[n, +], [[v, a], [v, b], [v, c]]], _7238)
   [1;34mUnify: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7234, [[n, +], [[v, a], [v, b], [v, c]]], _7238)
   [1;32mCall: [0m(27) [[n, +], [[v, a], [v, b], [v, c]]]=[[not, [_7232]]|_7216]
   [1;31mFail: [0m(27) [[n, +], [[v, a], [v, b], [v, c]]]=[[not, [_7232]]|_7216]
   [1;33mRedo: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7234, [[n, +], [[v, a], [v, b], [v, c]]], _7238)
   [1;34mUnify: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7234, [[n, +], [[v, a], [v, b], [v, c]]], _7238)
   [1;32mCall: [0m(27) [[n, +], [[v, a], [v, b], [v, c]]]=[[_7220], or, [_7238]]
   [1;31mFail: [0m(27) [[n, +], [[v, a], [v, b], [v, c]]]=[[_7220], or, [_7238]]
   [1;33mRedo: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7234, [[n, +], [[v, a], [v, b], [v, c]]], _7238)
   [1;34mUnify: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7234, [[n, +], [[v, a], [v, b], [v, c]]], _7238)
   [1;32mCall: [0m(27) [[n, +], [[v, a], [v, b], [v, c]]]=[_7214|_7216]
   [1;32mExit: [0m(27) [[n, +], [[v, a], [v, b], [v, c]]]=[[n, +], [[v, a], [v, b], [v, c]]]
^  [1;32mCall: [0m(27) not(predicate_or_rule_name([n, +]))
^  [1;34mUnify: [0m(27) not(user:predicate_or_rule_name([n, +]))
   [1;32mCall: [0m(28) predicate_or_rule_name([n, +])
   [1;34mUnify: [0m(28) predicate_or_rule_name([n, +])
   [1;32mExit: [0m(28) predicate_or_rule_name([n, +])
^  [1;31mFail: [0m(27) not(user:predicate_or_rule_name([n, +]))
   [1;31mFail: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7234, [[n, +], [[v, a], [v, b], [v, c]]], _7238)
   [1;33mRedo: [0m(25) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7218, [[[n, +], [[v, a], [v, b], [v, c]]]], true)
   [1;34mUnify: [0m(25) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7218, [[[n, +], [[v, a], [v, b], [v, c]]]], true)
   [1;32mCall: [0m(26) [[[n, +], [[v, a], [v, b], [v, c]]]]=[[not, [_7216]]|_7200]
   [1;31mFail: [0m(26) [[[n, +], [[v, a], [v, b], [v, c]]]]=[[not, [_7216]]|_7200]
   [1;33mRedo: [0m(25) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7218, [[[n, +], [[v, a], [v, b], [v, c]]]], true)
   [1;34mUnify: [0m(25) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7218, [[[n, +], [[v, a], [v, b], [v, c]]]], true)
   [1;32mCall: [0m(26) [[[n, +], [[v, a], [v, b], [v, c]]]]=[[_7204], or, [_7222]]
   [1;31mFail: [0m(26) [[[n, +], [[v, a], [v, b], [v, c]]]]=[[_7204], or, [_7222]]
   [1;33mRedo: [0m(25) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7218, [[[n, +], [[v, a], [v, b], [v, c]]]], true)
   [1;34mUnify: [0m(25) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7218, [[[n, +], [[v, a], [v, b], [v, c]]]], true)
   [1;32mCall: [0m(26) [[[n, +], [[v, a], [v, b], [v, c]]]]=[_7198|_7200]
   [1;32mExit: [0m(26) [[[n, +], [[v, a], [v, b], [v, c]]]]=[[[n, +], [[v, a], [v, b], [v, c]]]]
^  [1;32mCall: [0m(26) not(predicate_or_rule_name([[n, +], [[v, a], [v, b], [v, c]]]))
^  [1;34mUnify: [0m(26) not(user:predicate_or_rule_name([[n, +], [[v, a], [v, b], [v|...]]]))
   [1;32mCall: [0m(27) predicate_or_rule_name([[n, +], [[v, a], [v, b], [v, c]]])
   [1;31mFail: [0m(27) predicate_or_rule_name([[n, +], [[v, a], [v, b], [v, c]]])
^  [1;32mExit: [0m(26) not(user:predicate_or_rule_name([[n, +], [[v, a], [v, b], [v|...]]]))
   [1;32mCall: [0m(26) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[n, +], [[v, a], [v, b], [v, c]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7236, _7238, _7240)
   [1;34mUnify: [0m(26) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[n, +], [[v, a], [v, b], [v, c]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7236, true, nocut)
   [1;32mCall: [0m(27) interpretpart(isplus, [v, c], [v, a], [v, b], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7238)
   [1;34mUnify: [0m(27) interpretpart(isplus, [v, c], [v, a], [v, b], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7238)
   [1;32mCall: [0m(28) getvalues([v, c], [v, a], [v, b], _7234, _7236, _7238, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(28) getvalues([v, c], [v, a], [v, b], _7234, _7236, _7238, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(29) getvalue([v, c], _7230, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(29) getvalue([v, c], _7230, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(30) not(isvar([v, c]))
^  [1;34mUnify: [0m(30) not(user:isvar([v, c]))
   [1;32mCall: [0m(31) isvar([v, c])
   [1;34mUnify: [0m(31) isvar([v, c])
   [1;32mExit: [0m(31) isvar([v, c])
^  [1;31mFail: [0m(30) not(user:isvar([v, c]))
   [1;33mRedo: [0m(29) getvalue([v, c], _7230, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(30) isvar([v, c])
   [1;34mUnify: [0m(30) isvar([v, c])
   [1;32mExit: [0m(30) isvar([v, c])
   [1;32mCall: [0m(30) isvalstrorundef(_7228)
   [1;34mUnify: [0m(30) isvalstrorundef(_7228)
   [1;32mCall: [0m(31) var(_7228)
   [1;32mExit: [0m(31) var(_7228)
   [1;32mExit: [0m(30) isvalstrorundef(_7228)
   [1;32mCall: [0m(30) getvar([v, c], _7230, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(30) getvar([v, c], _7230, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(31) lists:member([[v, c], _7220], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(31) lists:member([[v, c], _7220], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(31) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(31) not(empty=empty)
^  [1;34mUnify: [0m(31) not(user:(empty=empty))
^  [1;31mFail: [0m(31) not(user:(empty=empty))
   [1;33mRedo: [0m(30) getvar([v, c], _7230, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(30) getvar([v, c], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(31) not(member([[v, c], _7226], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
^  [1;34mUnify: [0m(31) not(user:member([[v, c], _7226], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
^  [1;31mFail: [0m(31) not(user:member([[v, c], _7226], [[[v, a], 426], [[v, b], 106], [[v, c], empty]]))
   [1;33mRedo: [0m(30) getvar([v, c], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(31) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(31) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(31) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(30) getvar([v, c], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(29) getvalue([v, c], empty, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(29) getvalue([v, a], _7242, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(29) getvalue([v, a], _7242, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(30) not(isvar([v, a]))
^  [1;34mUnify: [0m(30) not(user:isvar([v, a]))
   [1;32mCall: [0m(31) isvar([v, a])
   [1;34mUnify: [0m(31) isvar([v, a])
   [1;32mExit: [0m(31) isvar([v, a])
^  [1;31mFail: [0m(30) not(user:isvar([v, a]))
   [1;33mRedo: [0m(29) getvalue([v, a], _7242, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(30) isvar([v, a])
   [1;34mUnify: [0m(30) isvar([v, a])
   [1;32mExit: [0m(30) isvar([v, a])
   [1;32mCall: [0m(30) isvalstrorundef(_7240)
   [1;34mUnify: [0m(30) isvalstrorundef(_7240)
   [1;32mCall: [0m(31) var(_7240)
   [1;32mExit: [0m(31) var(_7240)
   [1;32mExit: [0m(30) isvalstrorundef(_7240)
   [1;32mCall: [0m(30) getvar([v, a], _7242, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(30) getvar([v, a], _7242, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(31) lists:member([[v, a], _7232], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(31) lists:member([[v, a], _7232], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(31) lists:member([[v, a], 426], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(31) not(426=empty)
^  [1;34mUnify: [0m(31) not(user:(426=empty))
^  [1;32mExit: [0m(31) not(user:(426=empty))
   [1;32mExit: [0m(30) getvar([v, a], 426, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(29) getvalue([v, a], 426, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(29) getvalue([v, b], _7266, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(29) getvalue([v, b], _7266, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(30) not(isvar([v, b]))
^  [1;34mUnify: [0m(30) not(user:isvar([v, b]))
   [1;32mCall: [0m(31) isvar([v, b])
   [1;34mUnify: [0m(31) isvar([v, b])
   [1;32mExit: [0m(31) isvar([v, b])
^  [1;31mFail: [0m(30) not(user:isvar([v, b]))
   [1;33mRedo: [0m(29) getvalue([v, b], _7266, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(30) isvar([v, b])
   [1;34mUnify: [0m(30) isvar([v, b])
   [1;32mExit: [0m(30) isvar([v, b])
   [1;32mCall: [0m(30) isvalstrorundef(_7264)
   [1;34mUnify: [0m(30) isvalstrorundef(_7264)
   [1;32mCall: [0m(31) var(_7264)
   [1;32mExit: [0m(31) var(_7264)
   [1;32mExit: [0m(30) isvalstrorundef(_7264)
   [1;32mCall: [0m(30) getvar([v, b], _7266, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(30) getvar([v, b], _7266, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(31) lists:member([[v, b], _7256], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(31) lists:member([[v, b], _7256], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(31) lists:member([[v, b], 106], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
^  [1;32mCall: [0m(31) not(106=empty)
^  [1;34mUnify: [0m(31) not(user:(106=empty))
^  [1;32mExit: [0m(31) not(user:(106=empty))
   [1;32mExit: [0m(30) getvar([v, b], 106, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(29) getvalue([v, b], 106, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(28) getvalues([v, c], [v, a], [v, b], empty, 426, 106, [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(28) isvalempty(empty)
   [1;34mUnify: [0m(28) isvalempty(empty)
   [1;32mCall: [0m(29) isval(empty)
   [1;34mUnify: [0m(29) isval(empty)
   [1;31mFail: [0m(29) isval(empty)
   [1;33mRedo: [0m(28) isvalempty(empty)
   [1;32mCall: [0m(29) empty=empty
   [1;32mExit: [0m(29) empty=empty
   [1;32mExit: [0m(28) isvalempty(empty)
   [1;32mCall: [0m(28) isval(426)
   [1;34mUnify: [0m(28) isval(426)
   [1;32mExit: [0m(28) isval(426)
   [1;32mCall: [0m(28) isval(106)
   [1;34mUnify: [0m(28) isval(106)
   [1;32mExit: [0m(28) isval(106)
   [1;32mCall: [0m(28) _7294 is 426+106
   [1;32mExit: [0m(28) 532 is 426+106
   [1;32mCall: [0m(28) val1emptyorvalsequal(empty, 532)
   [1;34mUnify: [0m(28) val1emptyorvalsequal(empty, 532)
   [1;32mExit: [0m(28) val1emptyorvalsequal(empty, 532)
   [1;32mCall: [0m(28) putvalue([v, c], 532, [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7300)
   [1;34mUnify: [0m(28) putvalue([v, c], 532, [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7300)
^  [1;32mCall: [0m(29) not(isvar([v, c]))
^  [1;34mUnify: [0m(29) not(user:isvar([v, c]))
   [1;32mCall: [0m(30) isvar([v, c])
   [1;34mUnify: [0m(30) isvar([v, c])
   [1;32mExit: [0m(30) isvar([v, c])
^  [1;31mFail: [0m(29) not(user:isvar([v, c]))
   [1;33mRedo: [0m(28) putvalue([v, c], 532, [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7300)
   [1;32mCall: [0m(29) isvar([v, c])
   [1;34mUnify: [0m(29) isvar([v, c])
   [1;32mExit: [0m(29) isvar([v, c])
   [1;32mCall: [0m(29) isvalstrorundef(532)
   [1;34mUnify: [0m(29) isvalstrorundef(532)
   [1;32mCall: [0m(30) var(532)
   [1;31mFail: [0m(30) var(532)
   [1;33mRedo: [0m(29) isvalstrorundef(532)
   [1;34mUnify: [0m(29) isvalstrorundef(532)
^  [1;32mCall: [0m(30) not(var(532))
^  [1;34mUnify: [0m(30) not(user:var(532))
^  [1;32mExit: [0m(30) not(user:var(532))
   [1;32mCall: [0m(30) isval(532)
   [1;34mUnify: [0m(30) isval(532)
   [1;32mExit: [0m(30) isval(532)
   [1;32mExit: [0m(29) isvalstrorundef(532)
   [1;32mCall: [0m(29) updatevar([v, c], 532, [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7310)
   [1;34mUnify: [0m(29) updatevar([v, c], 532, [[[v, a], 426], [[v, b], 106], [[v, c], empty]], _7310)
   [1;32mCall: [0m(30) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;34mUnify: [0m(30) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mExit: [0m(30) lists:member([[v, c], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(30) lists:delete([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[v, c], empty], _7332)
   [1;34mUnify: [0m(30) lists:delete([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[v, c], empty], _7332)
   [1;32mExit: [0m(30) lists:delete([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[v, c], empty], [[[v, a], 426], [[v, b], 106]])
   [1;32mCall: [0m(30) lists:append([[[v, a], 426], [[v, b], 106]], [[[v, c], 532]], _7362)
   [1;34mUnify: [0m(30) lists:append([[[v, a], 426], [[v, b], 106]], [[[v, c], 532]], [[[v, a], 426]|_7346])
   [1;32mExit: [0m(30) lists:append([[[v, a], 426], [[v, b], 106]], [[[v, c], 532]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]])
   [1;32mCall: [0m(30) true
   [1;32mExit: [0m(30) true
   [1;32mCall: [0m(30) true
   [1;32mExit: [0m(30) true
   [1;32mCall: [0m(30) true
   [1;32mExit: [0m(30) true
   [1;32mExit: [0m(29) updatevar([v, c], 532, [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]])
   [1;32mExit: [0m(28) putvalue([v, c], 532, [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]])
   [1;32mCall: [0m(28) debug(on)
   [1;31mFail: [0m(28) debug(on)
   [1;33mRedo: [0m(27) interpretpart(isplus, [v, c], [v, a], [v, b], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]])
   [1;32mCall: [0m(28) true
   [1;32mExit: [0m(28) true
   [1;32mCall: [0m(28) debug(on)
   [1;31mFail: [0m(28) debug(on)
   [1;33mRedo: [0m(27) interpretpart(isplus, [v, c], [v, a], [v, b], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]])
   [1;32mCall: [0m(28) true
   [1;32mExit: [0m(28) true
   [1;32mExit: [0m(27) interpretpart(isplus, [v, c], [v, a], [v, b], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]])
   [1;32mExit: [0m(26) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[n, +], [[v, a], [v, b], [v, c]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], true, nocut)
^  [1;32mCall: [0m(26) not(nocut=cut)
^  [1;34mUnify: [0m(26) not(user:(nocut=cut))
^  [1;32mExit: [0m(26) not(user:(nocut=cut))
   [1;32mCall: [0m(26) _7382=[[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]
   [1;32mExit: [0m(26) [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]=[[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]]
   [1;32mCall: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], _7388, [], _7392)
   [1;34mUnify: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [], true)
   [1;32mExit: [0m(26) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [], true)
   [1;32mCall: [0m(26) logicalconjunction(true, true, true)
   [1;34mUnify: [0m(26) logicalconjunction(true, true, true)
   [1;32mCall: [0m(27) true(true)
   [1;34mUnify: [0m(27) true(true)
   [1;32mExit: [0m(27) true(true)
   [1;32mCall: [0m(27) true(true)
   [1;34mUnify: [0m(27) true(true)
   [1;32mExit: [0m(27) true(true)
   [1;32mExit: [0m(26) logicalconjunction(true, true, true)
   [1;32mExit: [0m(25) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [[[n, +], [[v, a], [v, b], [v, c]]]], true)
   [1;32mCall: [0m(25) updatevars([[[v, d], [v, c]]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [], _7388)
   [1;34mUnify: [0m(25) updatevars([[[v, d], [v, c]]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [], _7388)
   [1;32mCall: [0m(26) [[[v, d], [v, c]]]=[[_7374, _7380]|_7370]
   [1;32mExit: [0m(26) [[[v, d], [v, c]]]=[[[v, d], [v, c]]]
   [1;32mCall: [0m(26) expressionnotatom([v, c])
   [1;34mUnify: [0m(26) expressionnotatom([v, c])
   [1;32mCall: [0m(27) isvalstrempty([v, c])
   [1;34mUnify: [0m(27) isvalstrempty([v, c])
   [1;32mCall: [0m(28) var([v, c])
   [1;31mFail: [0m(28) var([v, c])
   [1;33mRedo: [0m(27) isvalstrempty([v, c])
   [1;34mUnify: [0m(27) isvalstrempty([v, c])
   [1;32mCall: [0m(28) isval([v, c])
   [1;34mUnify: [0m(28) isval([v, c])
   [1;31mFail: [0m(28) isval([v, c])
   [1;33mRedo: [0m(27) isvalstrempty([v, c])
   [1;34mUnify: [0m(27) isvalstrempty([v, c])
   [1;31mFail: [0m(27) isvalstrempty([v, c])
   [1;33mRedo: [0m(26) expressionnotatom([v, c])
   [1;34mUnify: [0m(26) expressionnotatom([v, c])
^  [1;32mCall: [0m(27) not(atom([v, c]))
^  [1;34mUnify: [0m(27) not(user:atom([v, c]))
^  [1;32mExit: [0m(27) not(user:atom([v, c]))
   [1;32mCall: [0m(27) length([v, c], _7412)
   [1;34mUnify: [0m(27) length([v, c], _7412)
   [1;32mExit: [0m(27) length([v, c], 2)
   [1;32mCall: [0m(27) 2>=1
   [1;32mExit: [0m(27) 2>=1
   [1;32mCall: [0m(27) expressionnotatom2([v, c])
   [1;34mUnify: [0m(27) expressionnotatom2([v, c])
   [1;32mCall: [0m(28) isvalstrempty(v)
   [1;34mUnify: [0m(28) isvalstrempty(v)
   [1;32mCall: [0m(29) var(v)
   [1;31mFail: [0m(29) var(v)
   [1;33mRedo: [0m(28) isvalstrempty(v)
   [1;34mUnify: [0m(28) isvalstrempty(v)
   [1;32mCall: [0m(29) isval(v)
   [1;34mUnify: [0m(29) isval(v)
   [1;31mFail: [0m(29) isval(v)
   [1;33mRedo: [0m(28) isvalstrempty(v)
   [1;34mUnify: [0m(28) isvalstrempty(v)
   [1;31mFail: [0m(28) isvalstrempty(v)
   [1;31mFail: [0m(27) expressionnotatom2([v, c])
   [1;33mRedo: [0m(26) expressionnotatom([v, c])
   [1;34mUnify: [0m(26) expressionnotatom([v, c])
   [1;32mCall: [0m(27) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(27) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(26) expressionnotatom([v, c])
   [1;33mRedo: [0m(25) updatevars([[[v, d], [v, c]]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [], _7406)
   [1;32mCall: [0m(26) lists:member([[v, c], _7392], [[[v, a], 426], [[v, b], 106], [[v, c], 532]])
   [1;34mUnify: [0m(26) lists:member([[v, c], _7392], [[[v, a], 426], [[v, b], 106], [[v, c], 532]])
   [1;32mExit: [0m(26) lists:member([[v, c], 532], [[[v, a], 426], [[v, b], 106], [[v, c], 532]])
   [1;32mCall: [0m(26) lists:append([], [[[v, d], 532]], _7434)
   [1;34mUnify: [0m(26) lists:append([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(26) lists:append([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mCall: [0m(26) updatevars([], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [[[v, d], 532]], _7436)
   [1;34mUnify: [0m(26) updatevars([], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(26) updatevars([], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(25) updatevars([[[v, d], [v, c]]], [[[v, a], 426], [[v, b], 106], [[v, c], 532]], [], [[[v, d], 532]])
^  [1;32mCall: [0m(25) not([[[v, d], 532]]=[])
^  [1;34mUnify: [0m(25) not(user:([[[v, d], 532]]=[]))
^  [1;32mExit: [0m(25) not(user:([[[v, d], 532]]=[]))
   [1;32mCall: [0m(25) unique1([[[v, d], 532]], [], _7446)
   [1;34mUnify: [0m(25) unique1([[[v, d], 532]], [], _7446)
   [1;32mCall: [0m(26) lists:delete([], [[v, d], 532], _7446)
   [1;34mUnify: [0m(26) lists:delete([], [[v, d], 532], [])
   [1;32mExit: [0m(26) lists:delete([], [[v, d], 532], [])
   [1;32mCall: [0m(26) lists:append([], [[[v, d], 532]], _7452)
   [1;34mUnify: [0m(26) lists:append([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(26) lists:append([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mCall: [0m(26) unique1([], [[[v, d], 532]], _7452)
   [1;34mUnify: [0m(26) unique1([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(26) unique1([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(25) unique1([[[v, d], 532]], [], [[[v, d], 532]])
   [1;32mCall: [0m(25) findresult3([426, 106, [v, d]], [[[v, d], 532]], [], _7454)
   [1;34mUnify: [0m(25) findresult3([426, 106, [v, d]], [[[v, d], 532]], [], _7454)
   [1;32mCall: [0m(26) [426, 106, [v, d]]=[_7434|_7436]
   [1;32mExit: [0m(26) [426, 106, [v, d]]=[426, 106, [v, d]]
   [1;32mCall: [0m(26) expressionnotatom(426)
   [1;34mUnify: [0m(26) expressionnotatom(426)
   [1;32mCall: [0m(27) isvalstrempty(426)
   [1;34mUnify: [0m(27) isvalstrempty(426)
   [1;32mCall: [0m(28) var(426)
   [1;31mFail: [0m(28) var(426)
   [1;33mRedo: [0m(27) isvalstrempty(426)
   [1;34mUnify: [0m(27) isvalstrempty(426)
   [1;32mCall: [0m(28) isval(426)
   [1;34mUnify: [0m(28) isval(426)
   [1;32mExit: [0m(28) isval(426)
   [1;32mExit: [0m(27) isvalstrempty(426)
   [1;32mExit: [0m(26) expressionnotatom(426)
   [1;32mCall: [0m(26) lists:append([], [426], _7464)
   [1;34mUnify: [0m(26) lists:append([], [426], [426])
   [1;32mExit: [0m(26) lists:append([], [426], [426])
   [1;32mCall: [0m(26) findresult3([106, [v, d]], [[[v, d], 532]], [426], _7466)
   [1;34mUnify: [0m(26) findresult3([106, [v, d]], [[[v, d], 532]], [426], _7466)
   [1;32mCall: [0m(27) [106, [v, d]]=[_7446|_7448]
   [1;32mExit: [0m(27) [106, [v, d]]=[106, [v, d]]
   [1;32mCall: [0m(27) expressionnotatom(106)
   [1;34mUnify: [0m(27) expressionnotatom(106)
   [1;32mCall: [0m(28) isvalstrempty(106)
   [1;34mUnify: [0m(28) isvalstrempty(106)
   [1;32mCall: [0m(29) var(106)
   [1;31mFail: [0m(29) var(106)
   [1;33mRedo: [0m(28) isvalstrempty(106)
   [1;34mUnify: [0m(28) isvalstrempty(106)
   [1;32mCall: [0m(29) isval(106)
   [1;34mUnify: [0m(29) isval(106)
   [1;32mExit: [0m(29) isval(106)
   [1;32mExit: [0m(28) isvalstrempty(106)
   [1;32mExit: [0m(27) expressionnotatom(106)
   [1;32mCall: [0m(27) lists:append([426], [106], _7476)
   [1;34mUnify: [0m(27) lists:append([426], [106], [426|_7460])
   [1;32mExit: [0m(27) lists:append([426], [106], [426, 106])
   [1;32mCall: [0m(27) findresult3([[v, d]], [[[v, d], 532]], [426, 106], _7484)
   [1;34mUnify: [0m(27) findresult3([[v, d]], [[[v, d], 532]], [426, 106], _7484)
   [1;32mCall: [0m(28) [[v, d]]=[_7464|_7466]
   [1;32mExit: [0m(28) [[v, d]]=[[v, d]]
   [1;32mCall: [0m(28) expressionnotatom([v, d])
   [1;34mUnify: [0m(28) expressionnotatom([v, d])
   [1;32mCall: [0m(29) isvalstrempty([v, d])
   [1;34mUnify: [0m(29) isvalstrempty([v, d])
   [1;32mCall: [0m(30) var([v, d])
   [1;31mFail: [0m(30) var([v, d])
   [1;33mRedo: [0m(29) isvalstrempty([v, d])
   [1;34mUnify: [0m(29) isvalstrempty([v, d])
   [1;32mCall: [0m(30) isval([v, d])
   [1;34mUnify: [0m(30) isval([v, d])
   [1;31mFail: [0m(30) isval([v, d])
   [1;33mRedo: [0m(29) isvalstrempty([v, d])
   [1;34mUnify: [0m(29) isvalstrempty([v, d])
   [1;31mFail: [0m(29) isvalstrempty([v, d])
   [1;33mRedo: [0m(28) expressionnotatom([v, d])
   [1;34mUnify: [0m(28) expressionnotatom([v, d])
^  [1;32mCall: [0m(29) not(atom([v, d]))
^  [1;34mUnify: [0m(29) not(user:atom([v, d]))
^  [1;32mExit: [0m(29) not(user:atom([v, d]))
   [1;32mCall: [0m(29) length([v, d], _7496)
   [1;34mUnify: [0m(29) length([v, d], _7496)
   [1;32mExit: [0m(29) length([v, d], 2)
   [1;32mCall: [0m(29) 2>=1
   [1;32mExit: [0m(29) 2>=1
   [1;32mCall: [0m(29) expressionnotatom2([v, d])
   [1;34mUnify: [0m(29) expressionnotatom2([v, d])
   [1;32mCall: [0m(30) isvalstrempty(v)
   [1;34mUnify: [0m(30) isvalstrempty(v)
   [1;32mCall: [0m(31) var(v)
   [1;31mFail: [0m(31) var(v)
   [1;33mRedo: [0m(30) isvalstrempty(v)
   [1;34mUnify: [0m(30) isvalstrempty(v)
   [1;32mCall: [0m(31) isval(v)
   [1;34mUnify: [0m(31) isval(v)
   [1;31mFail: [0m(31) isval(v)
   [1;33mRedo: [0m(30) isvalstrempty(v)
   [1;34mUnify: [0m(30) isvalstrempty(v)
   [1;31mFail: [0m(30) isvalstrempty(v)
   [1;31mFail: [0m(29) expressionnotatom2([v, d])
   [1;33mRedo: [0m(28) expressionnotatom([v, d])
   [1;34mUnify: [0m(28) expressionnotatom([v, d])
   [1;32mCall: [0m(29) predicate_or_rule_name([v, d])
   [1;31mFail: [0m(29) predicate_or_rule_name([v, d])
   [1;31mFail: [0m(28) expressionnotatom([v, d])
   [1;33mRedo: [0m(27) findresult3([[v, d]], [[[v, d], 532]], [426, 106], _7484)
   [1;34mUnify: [0m(27) findresult3([[v, d]], [[[v, d], 532]], [426, 106], _7484)
   [1;32mCall: [0m(28) [[v, d]]=[_7464|_7466]
   [1;32mExit: [0m(28) [[v, d]]=[[v, d]]
   [1;32mCall: [0m(28) isvar([v, d])
   [1;34mUnify: [0m(28) isvar([v, d])
   [1;32mExit: [0m(28) isvar([v, d])
   [1;32mCall: [0m(28) lists:member([[v, d], _7476], [[[v, d], 532]])
   [1;34mUnify: [0m(28) lists:member([[v, d], _7476], [[[v, d], 532]])
   [1;32mExit: [0m(28) lists:member([[v, d], 532], [[[v, d], 532]])
   [1;32mCall: [0m(28) lists:append([426, 106], [532], _7506)
   [1;34mUnify: [0m(28) lists:append([426, 106], [532], [426|_7490])
   [1;32mExit: [0m(28) lists:append([426, 106], [532], [426, 106, 532])
   [1;32mCall: [0m(28) findresult3([], [[[v, d], 532]], [426, 106, 532], _7520)
   [1;34mUnify: [0m(28) findresult3([], [[[v, d], 532]], [426, 106, 532], [426, 106, 532])
   [1;32mExit: [0m(28) findresult3([], [[[v, d], 532]], [426, 106, 532], [426, 106, 532])
   [1;32mExit: [0m(27) findresult3([[v, d]], [[[v, d], 532]], [426, 106], [426, 106, 532])
   [1;32mExit: [0m(26) findresult3([106, [v, d]], [[[v, d], 532]], [426], [426, 106, 532])
   [1;32mExit: [0m(25) findresult3([426, 106, [v, d]], [[[v, d], 532]], [], [426, 106, 532])
   [1;32mCall: [0m(25) debug(on)
   [1;31mFail: [0m(25) debug(on)
   [1;33mRedo: [0m(24) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, d], 532]])
   [1;32mCall: [0m(25) true
   [1;32mExit: [0m(25) true
   [1;32mCall: [0m(25) true
   [1;32mExit: [0m(25) true
   [1;32mExit: [0m(24) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function1], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]]]]], [[[v, d], 532]])
   [1;32mExit: [0m(23) member23([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532]])
   [1;32mExit: [0m(22) member22([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532]])
   [1;32mExit: [0m(21) member21([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532]])
   [1;32mExit: [0m(20) member2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532]])
   [1;32mExit: [0m(19) interpret2([[n, function1], [426, 106, [v, d]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532]])
   [1;32mCall: [0m(19) updatevars2([[v, d]], [[[v, d], 532]], [], _7520)
   [1;34mUnify: [0m(19) updatevars2([[v, d]], [[[v, d], 532]], [], _7520)
   [1;32mCall: [0m(20) [[[v, d], 532]]=[[_7506, _7512]|_7502]
   [1;32mExit: [0m(20) [[[v, d], 532]]=[[[v, d], 532]]
   [1;32mCall: [0m(20) lists:member([v, d], [[v, d]])
   [1;34mUnify: [0m(20) lists:member([v, d], [[v, d]])
   [1;32mExit: [0m(20) lists:member([v, d], [[v, d]])
   [1;32mCall: [0m(20) lists:append([], [[[v, d], 532]], _7554)
   [1;34mUnify: [0m(20) lists:append([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(20) lists:append([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mCall: [0m(20) updatevars2([[v, d]], [], [[[v, d], 532]], _7556)
   [1;34mUnify: [0m(20) updatevars2([[v, d]], [], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(20) updatevars2([[v, d]], [], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(19) updatevars2([[v, d]], [[[v, d], 532]], [], [[[v, d], 532]])
   [1;32mCall: [0m(19) updatevars3([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], 532]], _7554)
   [1;34mUnify: [0m(19) updatevars3([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], 532]], _7554)
   [1;32mCall: [0m(20) [[[v, d], 532]]=[[_7542, _7548]|_7538]
   [1;32mExit: [0m(20) [[[v, d], 532]]=[[[v, d], 532]]
   [1;32mCall: [0m(20) lists:delete([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[v, d], empty], _7584)
   [1;34mUnify: [0m(20) lists:delete([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[v, d], empty], _7584)
   [1;32mExit: [0m(20) lists:delete([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[v, d], empty], [[[v, a], 426], [[v, b], 106], [[v, c], empty]])
   [1;32mCall: [0m(20) lists:append([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], 532]], _7620)
   [1;34mUnify: [0m(20) lists:append([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], 532]], [[[v, a], 426]|_7604])
   [1;32mExit: [0m(20) lists:append([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], 532]], [[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]])
   [1;32mCall: [0m(20) updatevars3([[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]], [], _7638)
   [1;34mUnify: [0m(20) updatevars3([[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]])
   [1;32mExit: [0m(20) updatevars3([[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]], [], [[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]])
   [1;32mExit: [0m(19) updatevars3([[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], 532]], [[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]])
   [1;32mCall: [0m(19) reverse([[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]], [], _7638)
   [1;34mUnify: [0m(19) reverse([[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]], [], _7638)
   [1;32mCall: [0m(20) [[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]]=[_7620|_7622]
   [1;32mExit: [0m(20) [[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]]=[[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]]
   [1;32mCall: [0m(20) lists:append([[[v, a], 426]], [], _7650)
   [1;34mUnify: [0m(20) lists:append([[[v, a], 426]], [], [[[v, a], 426]|_7634])
   [1;32mExit: [0m(20) lists:append([[[v, a], 426]], [], [[[v, a], 426]])
   [1;32mCall: [0m(20) reverse([[[v, b], 106], [[v, c], empty], [[v, d], 532]], [[[v, a], 426]], _7656)
   [1;34mUnify: [0m(20) reverse([[[v, b], 106], [[v, c], empty], [[v, d], 532]], [[[v, a], 426]], _7656)
   [1;32mCall: [0m(21) [[[v, b], 106], [[v, c], empty], [[v, d], 532]]=[_7638|_7640]
   [1;32mExit: [0m(21) [[[v, b], 106], [[v, c], empty], [[v, d], 532]]=[[[v, b], 106], [[v, c], empty], [[v, d], 532]]
   [1;32mCall: [0m(21) lists:append([[[v, b], 106]], [[[v, a], 426]], _7668)
   [1;34mUnify: [0m(21) lists:append([[[v, b], 106]], [[[v, a], 426]], [[[v, b], 106]|_7652])
   [1;32mExit: [0m(21) lists:append([[[v, b], 106]], [[[v, a], 426]], [[[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(21) reverse([[[v, c], empty], [[v, d], 532]], [[[v, b], 106], [[v, a], 426]], _7674)
   [1;34mUnify: [0m(21) reverse([[[v, c], empty], [[v, d], 532]], [[[v, b], 106], [[v, a], 426]], _7674)
   [1;32mCall: [0m(22) [[[v, c], empty], [[v, d], 532]]=[_7656|_7658]
   [1;32mExit: [0m(22) [[[v, c], empty], [[v, d], 532]]=[[[v, c], empty], [[v, d], 532]]
   [1;32mCall: [0m(22) lists:append([[[v, c], empty]], [[[v, b], 106], [[v, a], 426]], _7686)
   [1;34mUnify: [0m(22) lists:append([[[v, c], empty]], [[[v, b], 106], [[v, a], 426]], [[[v, c], empty]|_7670])
   [1;32mExit: [0m(22) lists:append([[[v, c], empty]], [[[v, b], 106], [[v, a], 426]], [[[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(22) reverse([[[v, d], 532]], [[[v, c], empty], [[v, b], 106], [[v, a], 426]], _7692)
   [1;34mUnify: [0m(22) reverse([[[v, d], 532]], [[[v, c], empty], [[v, b], 106], [[v, a], 426]], _7692)
   [1;32mCall: [0m(23) [[[v, d], 532]]=[_7674|_7676]
   [1;32mExit: [0m(23) [[[v, d], 532]]=[[[v, d], 532]]
   [1;32mCall: [0m(23) lists:append([[[v, d], 532]], [[[v, c], empty], [[v, b], 106], [[v, a], 426]], _7704)
   [1;34mUnify: [0m(23) lists:append([[[v, d], 532]], [[[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532]|_7688])
   [1;32mExit: [0m(23) lists:append([[[v, d], 532]], [[[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(23) reverse([], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7710)
   [1;34mUnify: [0m(23) reverse([], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(23) reverse([], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(22) reverse([[[v, d], 532]], [[[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(21) reverse([[[v, c], empty], [[v, d], 532]], [[[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(20) reverse([[[v, b], 106], [[v, c], empty], [[v, d], 532]], [[[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(19) reverse([[[v, a], 426], [[v, b], 106], [[v, c], empty], [[v, d], 532]], [], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
^  [1;32mCall: [0m(19) not([[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]]=[])
^  [1;34mUnify: [0m(19) not(user:([[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v|...], 426]]=[]))
^  [1;32mExit: [0m(19) not(user:([[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v|...], 426]]=[]))
   [1;32mCall: [0m(19) unique1([[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [], _7722)
   [1;34mUnify: [0m(19) unique1([[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [], _7722)
   [1;32mCall: [0m(20) lists:delete([[[v, c], empty], [[v, b], 106], [[v, a], 426]], [[v, d], 532], _7722)
   [1;34mUnify: [0m(20) lists:delete([[[v, c], empty], [[v, b], 106], [[v, a], 426]], [[v, d], 532], _7722)
   [1;32mExit: [0m(20) lists:delete([[[v, c], empty], [[v, b], 106], [[v, a], 426]], [[v, d], 532], [[[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(20) lists:append([], [[[v, d], 532]], _7746)
   [1;34mUnify: [0m(20) lists:append([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mExit: [0m(20) lists:append([], [[[v, d], 532]], [[[v, d], 532]])
   [1;32mCall: [0m(20) unique1([[[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532]], _7746)
   [1;34mUnify: [0m(20) unique1([[[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532]], _7746)
   [1;32mCall: [0m(21) lists:delete([[[v, b], 106], [[v, a], 426]], [[v, c], empty], _7746)
   [1;34mUnify: [0m(21) lists:delete([[[v, b], 106], [[v, a], 426]], [[v, c], empty], _7746)
   [1;32mExit: [0m(21) lists:delete([[[v, b], 106], [[v, a], 426]], [[v, c], empty], [[[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(21) lists:append([[[v, d], 532]], [[[v, c], empty]], _7764)
   [1;34mUnify: [0m(21) lists:append([[[v, d], 532]], [[[v, c], empty]], [[[v, d], 532]|_7748])
   [1;32mExit: [0m(21) lists:append([[[v, d], 532]], [[[v, c], empty]], [[[v, d], 532], [[v, c], empty]])
   [1;32mCall: [0m(21) unique1([[[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty]], _7770)
   [1;34mUnify: [0m(21) unique1([[[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty]], _7770)
   [1;32mCall: [0m(22) lists:delete([[[v, a], 426]], [[v, b], 106], _7770)
   [1;34mUnify: [0m(22) lists:delete([[[v, a], 426]], [[v, b], 106], _7770)
   [1;32mExit: [0m(22) lists:delete([[[v, a], 426]], [[v, b], 106], [[[v, a], 426]])
   [1;32mCall: [0m(22) lists:append([[[v, d], 532], [[v, c], empty]], [[[v, b], 106]], _7782)
   [1;34mUnify: [0m(22) lists:append([[[v, d], 532], [[v, c], empty]], [[[v, b], 106]], [[[v, d], 532]|_7766])
   [1;32mExit: [0m(22) lists:append([[[v, d], 532], [[v, c], empty]], [[[v, b], 106]], [[[v, d], 532], [[v, c], empty], [[v, b], 106]])
   [1;32mCall: [0m(22) unique1([[[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106]], _7794)
   [1;34mUnify: [0m(22) unique1([[[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106]], _7794)
   [1;32mCall: [0m(23) lists:delete([], [[v, a], 426], _7794)
   [1;34mUnify: [0m(23) lists:delete([], [[v, a], 426], [])
   [1;32mExit: [0m(23) lists:delete([], [[v, a], 426], [])
   [1;32mCall: [0m(23) lists:append([[[v, d], 532], [[v, c], empty], [[v, b], 106]], [[[v, a], 426]], _7800)
   [1;34mUnify: [0m(23) lists:append([[[v, d], 532], [[v, c], empty], [[v, b], 106]], [[[v, a], 426]], [[[v, d], 532]|_7784])
   [1;32mExit: [0m(23) lists:append([[[v, d], 532], [[v, c], empty], [[v, b], 106]], [[[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(23) unique1([], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7818)
   [1;34mUnify: [0m(23) unique1([], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(23) unique1([], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(22) unique1([[[v, a], 426]], [[[v, d], 532], [[v, c], empty], [[v, b], 106]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(21) unique1([[[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, c], empty]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(20) unique1([[[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(19) unique1([[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(18) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, function1], [[v, a], [v, b], [v, d]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], true, nocut)
^  [1;32mCall: [0m(18) not(nocut=cut)
^  [1;34mUnify: [0m(18) not(user:(nocut=cut))
^  [1;32mExit: [0m(18) not(user:(nocut=cut))
   [1;32mCall: [0m(18) _7826=[[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]
   [1;32mExit: [0m(18) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]
   [1;32mCall: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7832, [[[n, =], [[v, c], [v, d]]]], _7836)
   [1;34mUnify: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7832, [[[n, =], [[v, c], [v, d]]]], _7836)
   [1;32mCall: [0m(19) [[[n, =], [[v, c], [v, d]]]]=[_7812|_7814]
   [1;32mExit: [0m(19) [[[n, =], [[v, c], [v, d]]]]=[[[n, =], [[v, c], [v, d]]]]
^  [1;32mCall: [0m(19) not(predicate_or_rule_name([[n, =], [[v, c], [v, d]]]))
^  [1;34mUnify: [0m(19) not(user:predicate_or_rule_name([[n, =], [[v, c], [v, d]]]))
   [1;32mCall: [0m(20) predicate_or_rule_name([[n, =], [[v, c], [v, d]]])
   [1;31mFail: [0m(20) predicate_or_rule_name([[n, =], [[v, c], [v, d]]])
^  [1;32mExit: [0m(19) not(user:predicate_or_rule_name([[n, =], [[v, c], [v, d]]]))
   [1;32mCall: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7848, [[n, =], [[v, c], [v, d]]], _7852)
   [1;34mUnify: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7848, [[n, =], [[v, c], [v, d]]], _7852)
   [1;32mCall: [0m(20) [[n, =], [[v, c], [v, d]]]=[_7828|_7830]
   [1;32mExit: [0m(20) [[n, =], [[v, c], [v, d]]]=[[n, =], [[v, c], [v, d]]]
^  [1;32mCall: [0m(20) not(predicate_or_rule_name([n, =]))
^  [1;34mUnify: [0m(20) not(user:predicate_or_rule_name([n, =]))
   [1;32mCall: [0m(21) predicate_or_rule_name([n, =])
   [1;34mUnify: [0m(21) predicate_or_rule_name([n, =])
   [1;32mExit: [0m(21) predicate_or_rule_name([n, =])
^  [1;31mFail: [0m(20) not(user:predicate_or_rule_name([n, =]))
   [1;33mRedo: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7848, [[n, =], [[v, c], [v, d]]], _7852)
   [1;34mUnify: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7848, [[n, =], [[v, c], [v, d]]], _7852)
   [1;32mCall: [0m(20) [[n, =], [[v, c], [v, d]]]=[[not, [_7846]]|_7830]
   [1;31mFail: [0m(20) [[n, =], [[v, c], [v, d]]]=[[not, [_7846]]|_7830]
   [1;33mRedo: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7848, [[n, =], [[v, c], [v, d]]], _7852)
   [1;34mUnify: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7848, [[n, =], [[v, c], [v, d]]], _7852)
   [1;32mCall: [0m(20) [[n, =], [[v, c], [v, d]]]=[[_7834], or, [_7852]]
   [1;31mFail: [0m(20) [[n, =], [[v, c], [v, d]]]=[[_7834], or, [_7852]]
   [1;33mRedo: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7848, [[n, =], [[v, c], [v, d]]], _7852)
   [1;34mUnify: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7848, [[n, =], [[v, c], [v, d]]], _7852)
   [1;32mCall: [0m(20) [[n, =], [[v, c], [v, d]]]=[_7828|_7830]
   [1;32mExit: [0m(20) [[n, =], [[v, c], [v, d]]]=[[n, =], [[v, c], [v, d]]]
^  [1;32mCall: [0m(20) not(predicate_or_rule_name([n, =]))
^  [1;34mUnify: [0m(20) not(user:predicate_or_rule_name([n, =]))
   [1;32mCall: [0m(21) predicate_or_rule_name([n, =])
   [1;34mUnify: [0m(21) predicate_or_rule_name([n, =])
   [1;32mExit: [0m(21) predicate_or_rule_name([n, =])
^  [1;31mFail: [0m(20) not(user:predicate_or_rule_name([n, =]))
   [1;31mFail: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7848, [[n, =], [[v, c], [v, d]]], _7852)
   [1;33mRedo: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7832, [[[n, =], [[v, c], [v, d]]]], _7836)
   [1;34mUnify: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7832, [[[n, =], [[v, c], [v, d]]]], _7836)
   [1;32mCall: [0m(19) [[[n, =], [[v, c], [v, d]]]]=[[not, [_7830]]|_7814]
   [1;31mFail: [0m(19) [[[n, =], [[v, c], [v, d]]]]=[[not, [_7830]]|_7814]
   [1;33mRedo: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7832, [[[n, =], [[v, c], [v, d]]]], _7836)
   [1;34mUnify: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7832, [[[n, =], [[v, c], [v, d]]]], _7836)
   [1;32mCall: [0m(19) [[[n, =], [[v, c], [v, d]]]]=[[_7818], or, [_7836]]
   [1;31mFail: [0m(19) [[[n, =], [[v, c], [v, d]]]]=[[_7818], or, [_7836]]
   [1;33mRedo: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7832, [[[n, =], [[v, c], [v, d]]]], _7836)
   [1;34mUnify: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7832, [[[n, =], [[v, c], [v, d]]]], _7836)
   [1;32mCall: [0m(19) [[[n, =], [[v, c], [v, d]]]]=[_7812|_7814]
   [1;32mExit: [0m(19) [[[n, =], [[v, c], [v, d]]]]=[[[n, =], [[v, c], [v, d]]]]
^  [1;32mCall: [0m(19) not(predicate_or_rule_name([[n, =], [[v, c], [v, d]]]))
^  [1;34mUnify: [0m(19) not(user:predicate_or_rule_name([[n, =], [[v, c], [v, d]]]))
   [1;32mCall: [0m(20) predicate_or_rule_name([[n, =], [[v, c], [v, d]]])
   [1;31mFail: [0m(20) predicate_or_rule_name([[n, =], [[v, c], [v, d]]])
^  [1;32mExit: [0m(19) not(user:predicate_or_rule_name([[n, =], [[v, c], [v, d]]]))
   [1;32mCall: [0m(19) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, =], [[v, c], [v, d]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7850, _7852, _7854)
   [1;34mUnify: [0m(19) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, =], [[v, c], [v, d]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7850, true, nocut)
   [1;32mCall: [0m(20) isop(=)
   [1;34mUnify: [0m(20) isop(=)
   [1;32mExit: [0m(20) isop(=)
   [1;32mCall: [0m(20) interpretpart(is, [v, c], [v, d], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7850)
   [1;34mUnify: [0m(20) interpretpart(is, [v, c], [v, d], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7850)
   [1;32mCall: [0m(21) getvalues([v, c], [v, d], _7846, _7848, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(21) getvalues([v, c], [v, d], _7846, _7848, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(22) getvalue([v, c], _7844, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(22) getvalue([v, c], _7844, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
^  [1;32mCall: [0m(23) not(isvar([v, c]))
^  [1;34mUnify: [0m(23) not(user:isvar([v, c]))
   [1;32mCall: [0m(24) isvar([v, c])
   [1;34mUnify: [0m(24) isvar([v, c])
   [1;32mExit: [0m(24) isvar([v, c])
^  [1;31mFail: [0m(23) not(user:isvar([v, c]))
   [1;33mRedo: [0m(22) getvalue([v, c], _7844, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(23) isvar([v, c])
   [1;34mUnify: [0m(23) isvar([v, c])
   [1;32mExit: [0m(23) isvar([v, c])
   [1;32mCall: [0m(23) isvalstrorundef(_7842)
   [1;34mUnify: [0m(23) isvalstrorundef(_7842)
   [1;32mCall: [0m(24) var(_7842)
   [1;32mExit: [0m(24) var(_7842)
   [1;32mExit: [0m(23) isvalstrorundef(_7842)
   [1;32mCall: [0m(23) getvar([v, c], _7844, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(23) getvar([v, c], _7844, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(24) lists:member([[v, c], _7834], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(24) lists:member([[v, c], _7834], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(24) lists:member([[v, c], empty], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
^  [1;32mCall: [0m(24) not(empty=empty)
^  [1;34mUnify: [0m(24) not(user:(empty=empty))
^  [1;31mFail: [0m(24) not(user:(empty=empty))
   [1;33mRedo: [0m(24) lists:member([[v, c], _7834], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;31mFail: [0m(24) lists:member([[v, c], _7834], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;33mRedo: [0m(23) getvar([v, c], _7844, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(23) getvar([v, c], empty, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
^  [1;32mCall: [0m(24) not(member([[v, c], _7840], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]]))
^  [1;34mUnify: [0m(24) not(user:member([[v, c], _7840], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v|...], 426]]))
^  [1;31mFail: [0m(24) not(user:member([[v, c], _7840], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v|...], 426]]))
   [1;33mRedo: [0m(23) getvar([v, c], empty, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(24) lists:member([[v, c], empty], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(24) lists:member([[v, c], empty], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(24) lists:member([[v, c], empty], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(23) getvar([v, c], empty, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(22) getvalue([v, c], empty, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(22) getvalue([v, d], _7856, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(22) getvalue([v, d], _7856, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
^  [1;32mCall: [0m(23) not(isvar([v, d]))
^  [1;34mUnify: [0m(23) not(user:isvar([v, d]))
   [1;32mCall: [0m(24) isvar([v, d])
   [1;34mUnify: [0m(24) isvar([v, d])
   [1;32mExit: [0m(24) isvar([v, d])
^  [1;31mFail: [0m(23) not(user:isvar([v, d]))
   [1;33mRedo: [0m(22) getvalue([v, d], _7856, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(23) isvar([v, d])
   [1;34mUnify: [0m(23) isvar([v, d])
   [1;32mExit: [0m(23) isvar([v, d])
   [1;32mCall: [0m(23) isvalstrorundef(_7854)
   [1;34mUnify: [0m(23) isvalstrorundef(_7854)
   [1;32mCall: [0m(24) var(_7854)
   [1;32mExit: [0m(24) var(_7854)
   [1;32mExit: [0m(23) isvalstrorundef(_7854)
   [1;32mCall: [0m(23) getvar([v, d], _7856, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(23) getvar([v, d], _7856, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(24) lists:member([[v, d], _7846], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(24) lists:member([[v, d], _7846], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(24) lists:member([[v, d], 532], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
^  [1;32mCall: [0m(24) not(532=empty)
^  [1;34mUnify: [0m(24) not(user:(532=empty))
^  [1;32mExit: [0m(24) not(user:(532=empty))
   [1;32mExit: [0m(23) getvar([v, d], 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(22) getvalue([v, d], 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(21) getvalues([v, c], [v, d], empty, 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(21) expression(empty)
   [1;34mUnify: [0m(21) expression(empty)
   [1;32mExit: [0m(21) expression(empty)
   [1;32mCall: [0m(21) expression(532)
   [1;34mUnify: [0m(21) expression(532)
   [1;32mCall: [0m(22) isval(532)
   [1;34mUnify: [0m(22) isval(532)
   [1;32mExit: [0m(22) isval(532)
   [1;32mExit: [0m(21) expression(532)
   [1;32mCall: [0m(21) val1emptyorvalsequal(empty, 532)
   [1;34mUnify: [0m(21) val1emptyorvalsequal(empty, 532)
   [1;32mExit: [0m(21) val1emptyorvalsequal(empty, 532)
   [1;32mCall: [0m(21) putvalue([v, c], 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7884)
   [1;34mUnify: [0m(21) putvalue([v, c], 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7884)
^  [1;32mCall: [0m(22) not(isvar([v, c]))
^  [1;34mUnify: [0m(22) not(user:isvar([v, c]))
   [1;32mCall: [0m(23) isvar([v, c])
   [1;34mUnify: [0m(23) isvar([v, c])
   [1;32mExit: [0m(23) isvar([v, c])
^  [1;31mFail: [0m(22) not(user:isvar([v, c]))
   [1;33mRedo: [0m(21) putvalue([v, c], 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7884)
   [1;32mCall: [0m(22) isvar([v, c])
   [1;34mUnify: [0m(22) isvar([v, c])
   [1;32mExit: [0m(22) isvar([v, c])
   [1;32mCall: [0m(22) isvalstrorundef(532)
   [1;34mUnify: [0m(22) isvalstrorundef(532)
   [1;32mCall: [0m(23) var(532)
   [1;31mFail: [0m(23) var(532)
   [1;33mRedo: [0m(22) isvalstrorundef(532)
   [1;34mUnify: [0m(22) isvalstrorundef(532)
^  [1;32mCall: [0m(23) not(var(532))
^  [1;34mUnify: [0m(23) not(user:var(532))
^  [1;32mExit: [0m(23) not(user:var(532))
   [1;32mCall: [0m(23) isval(532)
   [1;34mUnify: [0m(23) isval(532)
   [1;32mExit: [0m(23) isval(532)
   [1;32mExit: [0m(22) isvalstrorundef(532)
   [1;32mCall: [0m(22) updatevar([v, c], 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7894)
   [1;34mUnify: [0m(22) updatevar([v, c], 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], _7894)
   [1;32mCall: [0m(23) lists:member([[v, c], empty], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;34mUnify: [0m(23) lists:member([[v, c], empty], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mExit: [0m(23) lists:member([[v, c], empty], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(23) lists:delete([[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[v, c], empty], _7916)
   [1;34mUnify: [0m(23) lists:delete([[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[v, c], empty], _7916)
   [1;32mExit: [0m(23) lists:delete([[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[v, c], empty], [[[v, d], 532], [[v, b], 106], [[v, a], 426]])
   [1;32mCall: [0m(23) lists:append([[[v, d], 532], [[v, b], 106], [[v, a], 426]], [[[v, c], 532]], _7952)
   [1;34mUnify: [0m(23) lists:append([[[v, d], 532], [[v, b], 106], [[v, a], 426]], [[[v, c], 532]], [[[v, d], 532]|_7936])
   [1;32mExit: [0m(23) lists:append([[[v, d], 532], [[v, b], 106], [[v, a], 426]], [[[v, c], 532]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]])
   [1;32mCall: [0m(23) true
   [1;32mExit: [0m(23) true
   [1;32mCall: [0m(23) true
   [1;32mExit: [0m(23) true
   [1;32mCall: [0m(23) true
   [1;32mExit: [0m(23) true
   [1;32mExit: [0m(22) updatevar([v, c], 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]])
   [1;32mExit: [0m(21) putvalue([v, c], 532, [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]])
   [1;32mCall: [0m(21) debug(on)
   [1;31mFail: [0m(21) debug(on)
   [1;33mRedo: [0m(20) interpretpart(is, [v, c], [v, d], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]])
   [1;32mCall: [0m(21) true
   [1;32mExit: [0m(21) true
   [1;32mCall: [0m(21) debug(on)
   [1;31mFail: [0m(21) debug(on)
   [1;33mRedo: [0m(20) interpretpart(is, [v, c], [v, d], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]])
   [1;32mCall: [0m(21) true
   [1;32mExit: [0m(21) true
   [1;32mExit: [0m(20) interpretpart(is, [v, c], [v, d], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]])
   [1;32mExit: [0m(19) interpretstatement1([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[n, =], [[v, c], [v, d]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], true, nocut)
^  [1;32mCall: [0m(19) not(nocut=cut)
^  [1;34mUnify: [0m(19) not(user:(nocut=cut))
^  [1;32mExit: [0m(19) not(user:(nocut=cut))
   [1;32mCall: [0m(19) _7978=[[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]
   [1;32mExit: [0m(19) [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]=[[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]]
   [1;32mCall: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], _7984, [], _7988)
   [1;34mUnify: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [], true)
   [1;32mExit: [0m(19) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [], true)
   [1;32mCall: [0m(19) logicalconjunction(_7978, true, true)
   [1;34mUnify: [0m(19) logicalconjunction(true, true, true)
   [1;32mCall: [0m(20) true(true)
   [1;34mUnify: [0m(20) true(true)
   [1;32mExit: [0m(20) true(true)
   [1;32mCall: [0m(20) true(true)
   [1;34mUnify: [0m(20) true(true)
   [1;32mExit: [0m(20) true(true)
   [1;32mExit: [0m(19) logicalconjunction(true, true, true)
   [1;32mExit: [0m(18) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, d], 532], [[v, c], empty], [[v, b], 106], [[v, a], 426]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [[[n, =], [[v, c], [v, d]]]], true)
   [1;32mCall: [0m(18) logicalconjunction(true, true, true)
   [1;34mUnify: [0m(18) logicalconjunction(true, true, true)
   [1;32mCall: [0m(19) true(true)
   [1;34mUnify: [0m(19) true(true)
   [1;32mExit: [0m(19) true(true)
   [1;32mCall: [0m(19) true(true)
   [1;34mUnify: [0m(19) true(true)
   [1;32mExit: [0m(19) true(true)
   [1;32mExit: [0m(18) logicalconjunction(true, true, true)
   [1;32mExit: [0m(17) interpretbody([[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, a], 426], [[v, b], 106], [[v, c], empty]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [[[n, function1], [[v, a], [v, b], [v, d]]], [[n, =], [[v, c], [v, d]]]], true)
   [1;32mCall: [0m(17) updatevars([[[v, c], [v, c]]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [], _7984)
   [1;34mUnify: [0m(17) updatevars([[[v, c], [v, c]]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [], _7984)
   [1;32mCall: [0m(18) [[[v, c], [v, c]]]=[[_7970, _7976]|_7966]
   [1;32mExit: [0m(18) [[[v, c], [v, c]]]=[[[v, c], [v, c]]]
   [1;32mCall: [0m(18) expressionnotatom([v, c])
   [1;34mUnify: [0m(18) expressionnotatom([v, c])
   [1;32mCall: [0m(19) isvalstrempty([v, c])
   [1;34mUnify: [0m(19) isvalstrempty([v, c])
   [1;32mCall: [0m(20) var([v, c])
   [1;31mFail: [0m(20) var([v, c])
   [1;33mRedo: [0m(19) isvalstrempty([v, c])
   [1;34mUnify: [0m(19) isvalstrempty([v, c])
   [1;32mCall: [0m(20) isval([v, c])
   [1;34mUnify: [0m(20) isval([v, c])
   [1;31mFail: [0m(20) isval([v, c])
   [1;33mRedo: [0m(19) isvalstrempty([v, c])
   [1;34mUnify: [0m(19) isvalstrempty([v, c])
   [1;31mFail: [0m(19) isvalstrempty([v, c])
   [1;33mRedo: [0m(18) expressionnotatom([v, c])
   [1;34mUnify: [0m(18) expressionnotatom([v, c])
^  [1;32mCall: [0m(19) not(atom([v, c]))
^  [1;34mUnify: [0m(19) not(user:atom([v, c]))
^  [1;32mExit: [0m(19) not(user:atom([v, c]))
   [1;32mCall: [0m(19) length([v, c], _8008)
   [1;34mUnify: [0m(19) length([v, c], _8008)
   [1;32mExit: [0m(19) length([v, c], 2)
   [1;32mCall: [0m(19) 2>=1
   [1;32mExit: [0m(19) 2>=1
   [1;32mCall: [0m(19) expressionnotatom2([v, c])
   [1;34mUnify: [0m(19) expressionnotatom2([v, c])
   [1;32mCall: [0m(20) isvalstrempty(v)
   [1;34mUnify: [0m(20) isvalstrempty(v)
   [1;32mCall: [0m(21) var(v)
   [1;31mFail: [0m(21) var(v)
   [1;33mRedo: [0m(20) isvalstrempty(v)
   [1;34mUnify: [0m(20) isvalstrempty(v)
   [1;32mCall: [0m(21) isval(v)
   [1;34mUnify: [0m(21) isval(v)
   [1;31mFail: [0m(21) isval(v)
   [1;33mRedo: [0m(20) isvalstrempty(v)
   [1;34mUnify: [0m(20) isvalstrempty(v)
   [1;31mFail: [0m(20) isvalstrempty(v)
   [1;31mFail: [0m(19) expressionnotatom2([v, c])
   [1;33mRedo: [0m(18) expressionnotatom([v, c])
   [1;34mUnify: [0m(18) expressionnotatom([v, c])
   [1;32mCall: [0m(19) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(19) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(18) expressionnotatom([v, c])
   [1;33mRedo: [0m(17) updatevars([[[v, c], [v, c]]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [], _8002)
   [1;32mCall: [0m(18) lists:member([[v, c], _7988], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]])
   [1;34mUnify: [0m(18) lists:member([[v, c], _7988], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]])
   [1;32mExit: [0m(18) lists:member([[v, c], 532], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]])
   [1;32mCall: [0m(18) lists:append([], [[[v, c], 532]], _8030)
   [1;34mUnify: [0m(18) lists:append([], [[[v, c], 532]], [[[v, c], 532]])
   [1;32mExit: [0m(18) lists:append([], [[[v, c], 532]], [[[v, c], 532]])
   [1;32mCall: [0m(18) updatevars([], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [[[v, c], 532]], _8032)
   [1;34mUnify: [0m(18) updatevars([], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [[[v, c], 532]], [[[v, c], 532]])
   [1;32mExit: [0m(18) updatevars([], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [[[v, c], 532]], [[[v, c], 532]])
   [1;32mExit: [0m(17) updatevars([[[v, c], [v, c]]], [[[v, d], 532], [[v, b], 106], [[v, a], 426], [[v, c], 532]], [], [[[v, c], 532]])
^  [1;32mCall: [0m(17) not([[[v, c], 532]]=[])
^  [1;34mUnify: [0m(17) not(user:([[[v, c], 532]]=[]))
^  [1;32mExit: [0m(17) not(user:([[[v, c], 532]]=[]))
   [1;32mCall: [0m(17) unique1([[[v, c], 532]], [], _8042)
   [1;34mUnify: [0m(17) unique1([[[v, c], 532]], [], _8042)
   [1;32mCall: [0m(18) lists:delete([], [[v, c], 532], _8042)
   [1;34mUnify: [0m(18) lists:delete([], [[v, c], 532], [])
   [1;32mExit: [0m(18) lists:delete([], [[v, c], 532], [])
   [1;32mCall: [0m(18) lists:append([], [[[v, c], 532]], _8048)
   [1;34mUnify: [0m(18) lists:append([], [[[v, c], 532]], [[[v, c], 532]])
   [1;32mExit: [0m(18) lists:append([], [[[v, c], 532]], [[[v, c], 532]])
   [1;32mCall: [0m(18) unique1([], [[[v, c], 532]], _8048)
   [1;34mUnify: [0m(18) unique1([], [[[v, c], 532]], [[[v, c], 532]])
   [1;32mExit: [0m(18) unique1([], [[[v, c], 532]], [[[v, c], 532]])
   [1;32mExit: [0m(17) unique1([[[v, c], 532]], [], [[[v, c], 532]])
   [1;32mCall: [0m(17) findresult3([426, 106, [v, c]], [[[v, c], 532]], [], _8050)
   [1;34mUnify: [0m(17) findresult3([426, 106, [v, c]], [[[v, c], 532]], [], _8050)
   [1;32mCall: [0m(18) [426, 106, [v, c]]=[_8030|_8032]
   [1;32mExit: [0m(18) [426, 106, [v, c]]=[426, 106, [v, c]]
   [1;32mCall: [0m(18) expressionnotatom(426)
   [1;34mUnify: [0m(18) expressionnotatom(426)
   [1;32mCall: [0m(19) isvalstrempty(426)
   [1;34mUnify: [0m(19) isvalstrempty(426)
   [1;32mCall: [0m(20) var(426)
   [1;31mFail: [0m(20) var(426)
   [1;33mRedo: [0m(19) isvalstrempty(426)
   [1;34mUnify: [0m(19) isvalstrempty(426)
   [1;32mCall: [0m(20) isval(426)
   [1;34mUnify: [0m(20) isval(426)
   [1;32mExit: [0m(20) isval(426)
   [1;32mExit: [0m(19) isvalstrempty(426)
   [1;32mExit: [0m(18) expressionnotatom(426)
   [1;32mCall: [0m(18) lists:append([], [426], _8060)
   [1;34mUnify: [0m(18) lists:append([], [426], [426])
   [1;32mExit: [0m(18) lists:append([], [426], [426])
   [1;32mCall: [0m(18) findresult3([106, [v, c]], [[[v, c], 532]], [426], _8062)
   [1;34mUnify: [0m(18) findresult3([106, [v, c]], [[[v, c], 532]], [426], _8062)
   [1;32mCall: [0m(19) [106, [v, c]]=[_8042|_8044]
   [1;32mExit: [0m(19) [106, [v, c]]=[106, [v, c]]
   [1;32mCall: [0m(19) expressionnotatom(106)
   [1;34mUnify: [0m(19) expressionnotatom(106)
   [1;32mCall: [0m(20) isvalstrempty(106)
   [1;34mUnify: [0m(20) isvalstrempty(106)
   [1;32mCall: [0m(21) var(106)
   [1;31mFail: [0m(21) var(106)
   [1;33mRedo: [0m(20) isvalstrempty(106)
   [1;34mUnify: [0m(20) isvalstrempty(106)
   [1;32mCall: [0m(21) isval(106)
   [1;34mUnify: [0m(21) isval(106)
   [1;32mExit: [0m(21) isval(106)
   [1;32mExit: [0m(20) isvalstrempty(106)
   [1;32mExit: [0m(19) expressionnotatom(106)
   [1;32mCall: [0m(19) lists:append([426], [106], _8072)
   [1;34mUnify: [0m(19) lists:append([426], [106], [426|_8056])
   [1;32mExit: [0m(19) lists:append([426], [106], [426, 106])
   [1;32mCall: [0m(19) findresult3([[v, c]], [[[v, c], 532]], [426, 106], _8080)
   [1;34mUnify: [0m(19) findresult3([[v, c]], [[[v, c], 532]], [426, 106], _8080)
   [1;32mCall: [0m(20) [[v, c]]=[_8060|_8062]
   [1;32mExit: [0m(20) [[v, c]]=[[v, c]]
   [1;32mCall: [0m(20) expressionnotatom([v, c])
   [1;34mUnify: [0m(20) expressionnotatom([v, c])
   [1;32mCall: [0m(21) isvalstrempty([v, c])
   [1;34mUnify: [0m(21) isvalstrempty([v, c])
   [1;32mCall: [0m(22) var([v, c])
   [1;31mFail: [0m(22) var([v, c])
   [1;33mRedo: [0m(21) isvalstrempty([v, c])
   [1;34mUnify: [0m(21) isvalstrempty([v, c])
   [1;32mCall: [0m(22) isval([v, c])
   [1;34mUnify: [0m(22) isval([v, c])
   [1;31mFail: [0m(22) isval([v, c])
   [1;33mRedo: [0m(21) isvalstrempty([v, c])
   [1;34mUnify: [0m(21) isvalstrempty([v, c])
   [1;31mFail: [0m(21) isvalstrempty([v, c])
   [1;33mRedo: [0m(20) expressionnotatom([v, c])
   [1;34mUnify: [0m(20) expressionnotatom([v, c])
^  [1;32mCall: [0m(21) not(atom([v, c]))
^  [1;34mUnify: [0m(21) not(user:atom([v, c]))
^  [1;32mExit: [0m(21) not(user:atom([v, c]))
   [1;32mCall: [0m(21) length([v, c], _8092)
   [1;34mUnify: [0m(21) length([v, c], _8092)
   [1;32mExit: [0m(21) length([v, c], 2)
   [1;32mCall: [0m(21) 2>=1
   [1;32mExit: [0m(21) 2>=1
   [1;32mCall: [0m(21) expressionnotatom2([v, c])
   [1;34mUnify: [0m(21) expressionnotatom2([v, c])
   [1;32mCall: [0m(22) isvalstrempty(v)
   [1;34mUnify: [0m(22) isvalstrempty(v)
   [1;32mCall: [0m(23) var(v)
   [1;31mFail: [0m(23) var(v)
   [1;33mRedo: [0m(22) isvalstrempty(v)
   [1;34mUnify: [0m(22) isvalstrempty(v)
   [1;32mCall: [0m(23) isval(v)
   [1;34mUnify: [0m(23) isval(v)
   [1;31mFail: [0m(23) isval(v)
   [1;33mRedo: [0m(22) isvalstrempty(v)
   [1;34mUnify: [0m(22) isvalstrempty(v)
   [1;31mFail: [0m(22) isvalstrempty(v)
   [1;31mFail: [0m(21) expressionnotatom2([v, c])
   [1;33mRedo: [0m(20) expressionnotatom([v, c])
   [1;34mUnify: [0m(20) expressionnotatom([v, c])
   [1;32mCall: [0m(21) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(21) predicate_or_rule_name([v, c])
   [1;31mFail: [0m(20) expressionnotatom([v, c])
   [1;33mRedo: [0m(19) findresult3([[v, c]], [[[v, c], 532]], [426, 106], _8080)
   [1;34mUnify: [0m(19) findresult3([[v, c]], [[[v, c], 532]], [426, 106], _8080)
   [1;32mCall: [0m(20) [[v, c]]=[_8060|_8062]
   [1;32mExit: [0m(20) [[v, c]]=[[v, c]]
   [1;32mCall: [0m(20) isvar([v, c])
   [1;34mUnify: [0m(20) isvar([v, c])
   [1;32mExit: [0m(20) isvar([v, c])
   [1;32mCall: [0m(20) lists:member([[v, c], _8072], [[[v, c], 532]])
   [1;34mUnify: [0m(20) lists:member([[v, c], _8072], [[[v, c], 532]])
   [1;32mExit: [0m(20) lists:member([[v, c], 532], [[[v, c], 532]])
   [1;32mCall: [0m(20) lists:append([426, 106], [532], _8102)
   [1;34mUnify: [0m(20) lists:append([426, 106], [532], [426|_8086])
   [1;32mExit: [0m(20) lists:append([426, 106], [532], [426, 106, 532])
   [1;32mCall: [0m(20) findresult3([], [[[v, c], 532]], [426, 106, 532], _8116)
   [1;34mUnify: [0m(20) findresult3([], [[[v, c], 532]], [426, 106, 532], [426, 106, 532])
   [1;32mExit: [0m(20) findresult3([], [[[v, c], 532]], [426, 106, 532], [426, 106, 532])
   [1;32mExit: [0m(19) findresult3([[v, c]], [[[v, c], 532]], [426, 106], [426, 106, 532])
   [1;32mExit: [0m(18) findresult3([106, [v, c]], [[[v, c], 532]], [426], [426, 106, 532])
   [1;32mExit: [0m(17) findresult3([426, 106, [v, c]], [[[v, c], 532]], [], [426, 106, 532])
   [1;32mCall: [0m(17) debug(on)
   [1;31mFail: [0m(17) debug(on)
   [1;33mRedo: [0m(16) member1([[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, c], 532]])
   [1;32mCall: [0m(17) true
   [1;32mExit: [0m(17) true
   [1;32mCall: [0m(17) true
   [1;32mExit: [0m(17) true
   [1;32mExit: [0m(16) member1([[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, c], 532]])
   [1;32mExit: [0m(15) interpret1(off, [[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, c], 532]])
   [1;32mExit: [0m(14) interpret(off, [[n, function0], [426, 106, [v, c]]], [[[n, function0], [[v, a], [v, b], [v, c]], ":-", [[[n|...], [...|...]], [[...|...]|...]]], [[n, function1], [[v, a], [v, b], [v|...]], ":-", [[[...|...]|...]]]], [[[v, c], 532]])


[32m% 2,653,015 inferences, 1.670 CPU in 1.765 seconds (95% CPU, 1588457 Lips)
[0m